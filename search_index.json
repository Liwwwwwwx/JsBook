{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["前端面试javascript面试题整理","简介"],"book/1.原型链.html":["'david'","'kevin'","'liwenxuan'","//","1.原型","1.原型链","2.","3.构造函数constructor","4.实例与原型","6.原型链","=","==","__proto__","ag","david","delet","function","js中每一个函数都有一个prototype属性，这个属性指向函数的原型对象，每一个由原型对象派生的子对象，都有相同的属性。子对象就叫做构造函数，从实例原型中获取相同的属性","kevin","new","person","person()","person(age){","person.__proro__","person.nam","person.prototyp","person.prototype.constructor","person.prototype.nam","person1","person2","this.ag","true","var","{","}","原型链：每个构造函数都有一个原型对象，原型对象都包含一个指向构造函数的指针，而实例都包含一个指向原型对象的内部指针。","原型：被用于复制现有实例来生成新实例的函数","它是每一个值对象都会有的一个属性，指向该对象的原型","实例：是类在实例化之后一个一个具体的对象","当获取person.constructor时，其实person中并没有constructor属性，当不能读取到constructor属性时，会从person的原型也就是person.prototype中读取","当读取实例的属性时，如果找不到，就会查找与对象关联的原型中的属性，如果还查不到，就去找原型的原型，一直找到最顶层位置","构造函数：用new来调用，就是为了创建一个自定义类","此属性可以访问原型，但并不存在于person.prototype中，来自于object.prototype，可以理解为返回object.getprototypeof(obj)","每个原型都有一个constructor属性，指向关联的构造函数","每个构造函数都有一个原型对象，原型对象都包含一个指向构造函数的指针，而实例都包含一个指向原型对象的内部指针。那么假如让原型对象等于一个类型的实例，此时的原型对象将包含一个指向另一个原型的指针，相应的，另一个原型对象中也包含一个指向另一个构造函数的指针。假如另一个原型又是另一个类型的实例，那么上述关系依然成立。如此层层递进，就构成了实例与原型的链条。这就是所谓的原型链。"],"book/2.Js实现继承的方式.html":["\"mjy\",","\"yhd\",","',","'mjy',","'rap']","'xiaoma'","'xxt'","'xxxy'","'男'","'跳',","'跳'],","()","//","1.原型链继承","18,","19,","2.js实现继承的方式","2.借用构造函数继承","3.组合继承","4.原型式继承","=","['唱',","age:","age:18,","child","child('女');","child('男');","child()","child(){","child(gender)","child.getinfo();","child.info.gend","child.prototyp","child1","child1.getinfo()","child1.hoby.push('rap')","child1.info.nicknam","child1.isshow","child1.nam","child2","console.log('mi","console.log('执行次数');","console.log(child1)","console.log(child1.info);","console.log(child2)","console.log(child2.info);","console.log(person.hoby)","console.log(this.info)","console.log(this.info.name,","console.log(this.isshow)","createobject(obj)","createobject(person)","fals","fun()","fun.prototyp","function","function()","gender","gender)","gender:","hoby:","is:","is:',","js想实现继承的目的：重复利用另外一个对象的属性和方法","name","name:","name:'lwx',","new","obj","object.create()是把现有对象的属性，挂到新建对象的原型上，新建对象为空对象","object.create(person)","parent()","parent();","parent(gender)","parent.call(this,","parent.prototype.getinfo","person","person()","person(gender)","person.call(this,","person.prototype.getinfo","return","showname()","this.info","this.info.age)","this.isshow","this.name)","true","var","{","{}","}","};","使用原型链继承原型上的属性和方法","使用构造函数法传递参数","借用构造函数在一个函数a内部创建一个临时的构造函数，然后将传入的对象作为这个构造函数的原型，最后返回这个临时类型的一个新实例","方法一","方法二：object.create()","本质上，函数a是对传入的对象执行了一次浅拷贝","缺点：借用构造函数的缺点是方法都在构造函数中定义，因此无法实现函数复用。在父类型的原型中定义的方法，对子类型而言也是不可见的，结果所有类型都只能用构造函数模式。","缺点：对象实例共享所有继承的属性和方法。传递子类类型实例的时候，不能传递参数，因为这个对象是一次性创建的（没办法定制化）","缺点：无论在什么情况下，都会调用两次超类型构造函数；一次是在创建子类型原型的时候，另一个是在子类型构造函数内部","让一个构造函数的原型是另一个类型的实例，那么这个构造函数new出来的实例就具有该实例的属性"],"book/3.js数据类型.html":["&&","'object')","//","3.js数据类型","===","boolean","date","function","if(!a","isnull(a)","null","number","regexp)","typeof","undefin","{","}","为","基本数据类型：string","如何判断一个值是否为null","对象数据类型：object(array","符号：symbol"],"book/4.js有哪些判断类型的方法.html":["\"bigint\"","\"boolean\"","\"number\"","\"object\"","\"string\"","\"symbol\"","\"undefined\"","'a'","(function(){})","(new","({a:1})","//","//object","1","1.typeof","2.object.prototype.tostring.call()","3.obj","4.js有哪些判断类型的方法","42n","[1,2]","[1,3]","array","array]”","date","date)","date]”","function","function(){}","function]”","instanceof","nan","null","number","object","object.prototype.tostring.call([1,2])","object.prototype.tostring.call(function(){})","object.prototype.tostring.call(new","object.prototype.tostring.call({a:1})","object]”","symbol()","true","typeof","typeof(new","typeof({a:1})","undefin","“[object","内置对象","可以用来判断复杂数据类型","复杂数据类型里，除了函数返回了function，其他均返回object","数组返回\"object\"","普通对象直接返回“object”","智能用来判断复杂数据类型，因为instanceof是用于检测构造函数的prototype属性是否出现在某个实例对象的原型链上","特例","缺点：无法判断复杂数据类型，如date、array"],"book/5.如何判断一个变量是否数组？.html":["1.array.isarray()","2.对象原型","3.instanceof","4.object.prototype.tostring.call()","5.如何判断一个变量是否数组？","==","arr","arr.__proto__","array","array.isarray(arr)","array.prototyp","instanceof","object.prototype.tostring.call(arr)"],"book/6.Null和undefined的区别.html":["//","1）共同点","2）不同点","3）用法","6.null和undefined的区别","a;","null:表示一个变量即将指向一个对象，一般用于主动释放指向对象的引用","null表示“没有对象”，即该处不应该有值。典型用法","undefin","undefined:表示变脸声明但并未赋值，它是所有未赋值变量的默认值var","undefined表示“缺少值”，就是此处应该有一个值，但是还没有定义。典型用法是：","都是基本数据类型，保存在栈中的变量","（1）作为函数的参数，表示该函数的参数不是对象","（1）变量被声明了，但是没有赋值","（2）作为对象原型链的终点","（2）调用函数时，应该提供的参数没有提供","（3）对象没有赋值的属性","（4）函数没有返回值"],"book/7.call、bind、apply的区别.html":["'24',","'lwx',","'lwxx',","'写代码',","'男',","1.相同点","18,","3.实现bind方法","7.call、bind、apply的区别",":","=","[].concat.apply(arg,arguments);","[].slice.call(arguments,1);","_thi","_this.apply(context,","a.getinfo.apply(b,['女','学习'])","a.getinfo.bind(b)('女','学习')","a.getinfo.bind(b,'女','学习')()","a.getinfo.call(b,'女','学习')","ag","apply只有两个参数，第二个参数为数字","arg","arg)","arguments[0];","b","bind改变this指向后不会立即执行，而是返回一个永久改变this指向的函数","call和apply都是对函数进行直接调用","call和bind的参数是依次传参，一一对应的","console.log(this.name,","context","function()","function(){","function.prototype.bind","getinfo:function(sex,","hobbi","hobby)","name","return","sex","sex,","this.age,","this;","var","{","}","第一个参数都是this要指向的对象","都可以利用后续参数传参2.区别","都是改变this指向"],"book/8.防抖和节流.html":["!time","()","(time)","//1.普通方法","//2.只有一段时间都不点击定时器才能到达条件并执行事件函数","//3.通过settimeout的方式第一次会执行，后面不执行","//4.节流，保证在规定时间内执行一次执行函数","//5.使用时间戳的方式实现节流","//防抖就是同settimeout的方式，在一定的时间间隔内，将多次出发变成一次触发","0","1000))","8.防抖和节流","=","=>",">","bef","btn","btn.addeventlistener('click',","btns.addeventlistener('click',","cleartimeout(time)","console.log('1234567');","console.log(time);","date().gettime()","delay)","document.getelementbyid('btn')","document.getelementbyid('btns')","fals","firstclick","flag","fn()","function","function()","function(fn,","html代码","if(firstclick)","if(flag)","if(now","if(time)","js代码","new","now","null","real()","return","settimeout(()","time","trigger(fn,","trigger(real,","triggers(fn,","triggers(real,","true","var","{","}","},","},delay)"],"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":["!==","\"a\"}","$","$.extend(true,","'a',","'lwx',","'object'){","(3)","//","1","1,","1）区别","2","2）浅拷贝","3）深拷贝","4","9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？",":","=","===","[...arr]","[1,2,3]","[1,2,[3,4],5]","[1,2,[4,4],5]","[2,2,[4,4],5]","_","_.clonedeep()","_.clonedeep(obj1)","a.复制数组","arr","arr.concat()","arr.slice(0)","array.prototype.concat()","array.prototype.slice()","arrs[0]","arrs[2][0]","b","b.从索引start到end的子数组","c","c.将类数组对象转换为数组","console.log(arr)","console.log(arrs)","console.log(obj2);","console.log(this.name)","const","copyobj(obj)","copyobj(value)","end)","f:","fals","for(let","function","function()","g:","getinfo:","if(obj.hasproperty(prop)){","if(typeof","jquery.entend()","json.parse()","json.parse(json.stringify(obj));","json.parse(json.stringify(obj1))","json.stringify()","key","name","name1:","name1:'123',","name2:'234'","name3:","name4:","name:","names:","newobj","newobj;","newobj[key]","newobj[prop]","obj","obj)","obj1","obj1)","obj1.b.f","obj2","obj2.b.f","obj[key]","obj[prop];","object.assign","object.assign({},","prop","require('jquery')","require('lodash')","return","shallowclone(obj)","slice(start,","symbol('a')","undefined,","valu","var","{","{name:","{}","{},","{};","}","},","};","}else{","使用拓展运算符实现的复制","只拷贝了一层，更深层次的没有拷贝","在javascript中，存在浅拷贝的现象有","将javascript值转换为json字符串","将json字符串转换为对象","常见的深拷贝方式有","手写循环递归","数组拼接","浅拷贝：拷贝一层，属性为对象时，浅拷贝是复制，两个对象指向同一个地址","深拷贝开辟一个新的栈，两个对象属性完全相同，但对应两个不同的地址，修改一个对象的属性，不会改变另一个对象的属性","深拷贝：地柜拷贝深层次，属性为对象时，深拷贝是新开栈，两个对象指向不同的地址","这种方式存在弊端，会忽略undefined、symbol和函数","（1）_.clonedeep()","（1）object.assign","（2）jquery.extend()","（2）slice()","（3）concat()","（4）手写循环递归","（4）拓展运算符"],"book/10.对比一下var、const、let.html":["10.对比一下var、const、let","const在声明变量时必须为其赋值，在声明之后不可改变；如果声明的是一个对象，则会存储引用地址，地址不会改变，但是地址中的存储对象可以改变","var允许变量名重复，即可以多次重复声明；而let和const不可以","var和let用于声明变量，而const用于声明常量","var声明的变量不存在块级作用域，在全部范围内有效，（因为变量提升）；而let和const声明只在块级作用域内使用","var存在变量提升，可以先使用后声明；而let和const只能先声明后使用"],"book/11.箭头函数和普通函数区别是什么？.html":["'global'","'global';","'obj'","'obj',","'obj'})();","'obj'});","()","//","11.箭头函数和普通函数区别是什么？","=","=>","a:","b:","console.log(this.id)","console.log(this.id);","constructor","fun1","fun1();","fun1.apply({id:","fun1.bind({id:","fun1.call({id:","function(){","id","id:","new","obj","obj.a()","obj.a();","obj.b","obj.b()","obj.b();","typeerror:","uncaught","undefin","var","{","}","},","};","对象obj的方法b是使用箭头函数定义的，这个函数中的this就永远指向它所定义时所处的全局执行环境中的this，几遍这个函数作为对象obj的方法调用，this依旧指向window对象。需要注意，定义对象的大括号{}无法行程一个单独的执行环境，它依旧是处于全局执行环境中","由于箭头函数没有自身的this，且this指向外层的执行环境，不能改变指向，所以不能当做构造函数使用","箭头函数不会创建自己的this，所以他没有自己的this，它只会在自己作用域的上一层继承this。所以箭头函数中this的指向在它定义时已经确定了，之后不会改变","箭头函数没有自己的arguments对象。在箭头函数中访问arguments实际上获得的是它外层函数的arguments值","（1）箭筒函数没有自己的thi","（2）箭头函数继承的this指向永远不会改变","（3）call、apply()、bind()等方法不能改变箭头函数中的this指向","（4）箭头函数不能作为构造函数使用","（5）箭头函数没有自己的argument","（6）箭头函数没有prototyp"],"book/12.使用new创建对象的过程是什么样的？.html":["//ceshi","//让this变成p","1.创建空对象","12.使用new创建对象的过程是什么样的？","2.设置对象的proto属性指向构造函数的prototype对象","3.使用新对象调用函数，函数中的this被指向新实例对象（因此可以使用new关键字来改变this指向）","4.将初始化完毕的新对象地址，保存到等号左边的变量中","=","car1=new","car2=new","ceshi('奔驰')","ceshi('法拉利')","ceshi=function(name){","classa()为例","classa.call(p);","classa.prototyp","console.log(this)//ceshi","new","p","p.__proto__","this.name=name;","var","{name:\"奔驰\"}","{name:\"法拉利\"}","{}","}","上述代码中this分别指向car1和cae2","以var"],"book/13.this指向系列问题.html":["()","(2)","(function(){","+","//","//btn","//function声明函数","//true","//window","//{fn:f}","//不使用new指向window","//此处的this分别指向person的实例对象p1","1,","13.this指向系列问题","1）this的指向","2","=","===","=>","a.构造函数调用，此时this指向实例对象","age,","b.对象方法调用是，此时this指向该方法所属的对象","bar","bar()","bar(){","bar:","btn","btn.addeventlistener('click',","c.通过时间绑定的方法，此时this指向绑定的对象","console.log(this)","document.getelementid('#btn')","fn:function(){","foo()","foo:f","function","function(){","function(num)","getname:","name","name)","name:","new","num","obj","obj.bar()","obj.fn()","obj.foo()","obj.getname()","obj.getname.apply(obj1,[2])","obj.getname.call(obj1,2)","obj1","p1","p2","peopl","person('lwx')","person(16,'lwx')","person(17,'lwxx')","person(age,","person(name){","return","self","setinterval(function(){","this.ag","this.nam","this总是（非严格模式下）指向一个对象，而具体指向哪个对象是运行时基于函数的执行环境动态绑定的，而非函数被声明时的环境","var","window","{","}","})","})()","},","},1000)","使用new","定时器函数的this指向window","当函数不作为对象的属性被调用，而是以普通函数的方式，this总是指向全局对象（在浏览器中，通常是window对象）","方法调用中谁调用this就指向谁","浏览器环境下","箭头函数不会创建自己的this，它只会从自己的作用域链的上一层继承thi","这里new改变了this指向，将this由window指向的person的实例对象peopl","（1）全局作用域和普通函数吊桶，此时this指向window","（3）构造器调用","（4）箭头函数中指向外层作用域的thi","（5）call或apply调用","（6）补充"],"book/14.闭包.html":["(function(){","++","+=","//","0","0;","1","1)","14.闭包","1）定义","2","2）作用","3）缺点","4）应用场景","=","abc","bar","bar()","bar：","changecount(","changecount(1)","changecount(val)","console.log(local)","console.log(num)","count","counter","counter.delcrement()","counter.intcrement()","counter.value()","delcrement:function()","foo()","foo(){","func","func()","function","function()","intcrement:function()","local","log(num)","return","settimeout(log(2),2000)","val","value:fcuntion()","var","{","}","})()","},","为什么要return","为什么要函数套函数：为了隐藏变量","会增大内存使用量，滥用闭包会影响性能，导致内存泄露问题","函数和函数内部能访问道德变量的总和，就是一个闭包","如果不return，就无法使用这个闭包。只要让外面可以访问到这个bar函数就行","运行在一个立即执行函数中","闭包常常用来间接访问一个变量。换句话说就是隐藏一个变量","（1）采用函数引用方式的settimeout调用","（2）用闭包模拟私有方法"],"book/15.JS事件循环的理解.html":["()","(){","(resolve)",",后面代码也就是","//","0);","1","1.执行fn1()时遇到","15.js事件循环的理解","1）为什么需要事件循环","2.执行fn2()时遇到","2）宏任务和微任务","3","3.遇见await","3）事件循环","4.执行","4）async和await","5.主任务完成,执行微任务,即","5）练习","6的步骤进行反复执行，知道清空宏任务列表的宏任务","=>",">resolved。简单来说，就是resolve(4)，这行代码会直接出发then的回调函数","ajax请求","async","async1()","async2()","await","console.log('async1","console.log('async2')","console.log('fn2')","console.log('fn2'),输出","console.log('promise1')","console.log('promise2')","console.log('script","console.log('settimeout')","console.log(1)","console.log(1),输出","console.log(1);","console.log(10);","console.log(2)","console.log(2),","console.log(2);","console.log(2)会被阻塞,放入微任务队列","console.log(3)","console.log(3),输出","console.log(3);","console.log(5);","console.log(7);","console.log(9);","console.log(res);","dom渲染（表示第一次事件循环结束）","end')","fn1","fn1()","fn2","fn2()","function","js中任务大致分为两种","mutainobersv","new","promise((resolve,","promise(funct","promise.nexttick","promise对象的resolve函数的作用是，将promise对象的状态从‘未完成’变为‘成功’，即从pend","promise是同步任务，可以进入主线程","ps：new","reject)","rendeer","resolve()","resolve(4);","resolve(8);","setimmedi","setintervel","settimeout","settimeout(()","settimeout(funct","start')","ui","{","|","}","})","}).then((res)","}).then(funct","});","},","不管await后面跟着的是什么，await都会阻塞后面的代码，将他们放入微任务队列中，然后执行async外面的代码","再按照2","创建promise对象时，会立即执行里面的代码","同步任务：可以立即执行，同步任务一般会直接进入到主线程中执行。","因为js是一门单线程语言，但是我们因为需要调用接口或者进行其他需要延时的操作，如果是单线程，就会阻塞整个进程，所以实现单线程非阻塞的方法就是事件循环","外面的同步代码,即","宏任务：时间粒度比较大，执行的时间间隔是不能精确控制的，对一些高实时性的需求就不太符合","常见的宏任务：script(外层同步代码)","常见的微任务：promise.then","异步任务也分为两种","异步任务：异步进行的任务，例如settimeout等等","微任务：一个需要异步执行的函数，执行时机是在主函数执行结束后、当前宏任务结束之前","执行同步任务，然后依次次的执行微任务列表里的微任务","找到同步任务","找到宏任务，把宏任务放到宏任务列表","找到微任务，把微任务放到微任务列表","然后执行宏任务，找到一个宏任务表示进入了第二次事件循环","输出2","进入到了script标签就相当于进入了第一次事件循环","阻塞"],"book/16.谈谈对promise的理解.html":["&&","'./qzone.png'","'http://www.bai.com'","'加载失败'","(xhr.statu","//上面代码requestimg函数异步请求一张图片，timeout函数是一个延时5秒的异步操作，我们将他们在一起放在race中赛跑","//如果5秒内图片请求成功那么便进入then方法，执行正常的流程。","//如果5秒内图片还未成功返回，那么则进入catch，报“图片请求超时”的信息","16.谈谈对promise的理解","1）什么是promis","200)","2）名词约定","3）promise的三个状态","4","400)","4）promise异步封装ajax","5）promise异步加载图片","=","==","=>","all()方法：","all方法在所有异步操作执行完后才执行回调。","api，自己身上有all、reject、resolve等方法，原型上有then、catch等方法","catch","catch()方法：","console.log(err);","console.log(reason)","console.log(res)","console.log(res);","document.createelement('span')","feach('get',","feach(method,url)","fulfil","function","function()","if(xhr.readyst","image()","img","img.onload","img.src","new","p","p;","pend","pending变成fulfilled或者由pending变成reject","promis","promise((resolve,","promise.race([requsetimg(),","promise接受一个「函数」作为参数，该函数的两个参数分别是resolve和reject。","promise是一个构造函数，对外提供统一的","promise是异步编程的一种方案，解决了地狱回调的问题，是一种链式调动的方式","promise的两个特点","promise（首字母小写）对象指的是“promise实例对象”","race","race()方法：而","reject","reject('失败')","reject)","reject函数的作用：在异步操作失败将参数传递出去","requestimg()","resolv","resolve(img)","resolve(span)","resolve(xhr.responsetext)","resolve函数的作用：在异步操作成功时将参数传递出去；","return","settimeout(()","span","span.innertext","then()方法：","timeout()","timeout()]).then((res)","true)","url","url).then(r","url,","var","xhr","xhr.onreadystatechang","xhr.open(method,","xhr.send(null)","xhr.statu","xmlhttprequest()","{","}","})","}).catch((reason)","},5000)","},err=>{","}els","初始状态","只有异步操作的结果可以决定当前是哪一种状态，只能由","回调。","失败状态","当执行","成功状态","方法中。","方法就是异步操作执行完后，用链式调用的方式执行回调函数。","是一个对象，从它可以获取异步操作的的最终状态（成功或失败）。","的","的回调抛出异常了（代码出错了），会进到这个","的话只要有一个异步操作执行完毕，就立刻执行","简单说就是一个容器，里面保存着某个未来才会结束的事件（通常是一个异步操作）的结果。","首字母大写且单数形式，表示“promise构造函数”","首字母大写且复数形式，用于指代“promises规范”","（1）promise对象的状态不受外界影响","（2）一旦状态改变，就不会再变，任何时候都可以得到这个结果"],"book/17.手写Promise.all.html":["(const",")","++","0","17.手写promise.al","=","==","=>","[]","console.log(data)","const","count","count)","count++","data","fullfillcount","function","if(count","if(fullfillcount","myall([1,2,3,4]).then((data)","myall(prams){","new","p","pram","prams)","promise((resolve,","promise.all([1,2,3,4]).then((data)=>","promise.resolve(pram).then((data)","re","rej","reject","reject)","res(result)","res,","resolv","result","result[i]","return","var","{","}","})","},rej)"],"book/18.手写Promise.html":["!==","'fulfilled'","'fulfilled')","'function')","'pending'","'pending')","'rejected'","'rejected')","(count","(e)","(let","(onrejected)","(result","(self.promisest","(this.promisest","(typeof","(valu","//","//1.修改对象的状态（promisestate）","//2.设置对象结果值（promiseresult）","//all方法","//catch方法","//race方法","//reject方法","//resolve方法","//then方法","//保存回调函数","//修改promise对象的状态","//修改状态","//判断","//判断状态","//同步调用[执行器函数]","//声明属性","//如果是promise类型对象","//将当前promise对象成功的结果","//得知对象的状态是成功","//构造函数","//每个promise对象都成功","//添加属性","//调用回调函数","//调用成功的回调函数","0","0;","18.手写promis","=","===","=>","[]","all(promise)","arr","arr[i]","callback(onrejected)","callback(onresolved)","callback(type)","catch","class","const","constructor(executor)","count","count++","data","executor(resolve,","function","instanceof","item.onrecjected(data)","item.onresolved(data)","new","null","onreject","onrejected()","onrejected)","onresolv","onresolved()","promis","promise((resolve,","promise)","promise.length)","promsie)","r","race(promise)","reason","reject(data)","reject(e)","reject(r)","reject(reason)","reject)","resolve()","resolve(data)","resolve(result)","resolve(v)","resolve(value)","result","result.then(v","return","return;","self","self.callbacks.foreach(item","self.promiseresult","self.promisest","settimeout(()","static","then(onresolved,","this.callback","this.callbacks.push({","this.promiseresult","this.promisest","this.then(undefined,","throw","tri","type(self.promiseresult)","v","valu","value.then(v","{","}","})","});","},","判断","判断状态","存入到数组中"]},"length":19},"tokenStore":{"root":{"0":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315},"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102},"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.041666666666666664},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}},";":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}}},")":{"docs":{},";":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}},"1":{"0":{"0":{"0":{"docs":{},")":{"docs":{},")":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.0136986301369863}}}}},"docs":{}},"docs":{},".":{"docs":{},"对":{"docs":{},"比":{"docs":{},"一":{"docs":{},"下":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"、":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"、":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"book/10.对比一下var、const、let.html":{"ref":"book/10.对比一下var、const、let.html","tf":10.166666666666666}}}}}}}}}}}}}}}}}}}}},"1":{"docs":{},".":{"docs":{},"箭":{"docs":{},"头":{"docs":{},"函":{"docs":{},"数":{"docs":{},"和":{"docs":{},"普":{"docs":{},"通":{"docs":{},"函":{"docs":{},"数":{"docs":{},"区":{"docs":{},"别":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":10.013333333333334}}}}}}}}}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"使":{"docs":{},"用":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"创":{"docs":{},"建":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"样":{"docs":{},"的":{"docs":{},"？":{"docs":{"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":10.029411764705882}}}}}}}}}}}}}}}}}}}}}},"3":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"指":{"docs":{},"向":{"docs":{},"系":{"docs":{},"列":{"docs":{},"问":{"docs":{},"题":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":10.006024096385541}}}}}}}}}}}}}},"4":{"docs":{},".":{"docs":{},"闭":{"docs":{},"包":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":10.01010101010101}}}}}},"5":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"事":{"docs":{},"件":{"docs":{},"循":{"docs":{},"环":{"docs":{},"的":{"docs":{},"理":{"docs":{},"解":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":10.00625}}}}}}}}}}}}},"6":{"docs":{},".":{"docs":{},"谈":{"docs":{},"谈":{"docs":{},"对":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"的":{"docs":{},"理":{"docs":{},"解":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":10.005847953216374}}}}}}}}}}}}}}}}},"7":{"docs":{},".":{"docs":{},"手":{"docs":{},"写":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":10.01388888888889}}}}}}}}}}}}}}}},"8":{"docs":{},",":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015},"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}},".":{"docs":{},"手":{"docs":{},"写":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":10.003076923076923}}}}}}}}}}}},"9":{"docs":{},",":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.013157894736842105}}}},"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464},"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.007142857142857143},"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102},"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}},".":{"docs":{},"原":{"docs":{},"型":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}},"链":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":10.013333333333334}},"继":{"docs":{},"承":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"book/5.如何判断一个变量是否数组？.html":{"ref":"book/5.如何判断一个变量是否数组？.html","tf":0.07692307692307693}}}}}}}}}}}}}}}}},"相":{"docs":{},"同":{"docs":{},"点":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}}},"创":{"docs":{},"建":{"docs":{},"空":{"docs":{},"对":{"docs":{},"象":{"docs":{"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.029411764705882353}}}}}}},"执":{"docs":{},"行":{"docs":{},"f":{"docs":{},"n":{"1":{"docs":{},"(":{"docs":{},")":{"docs":{},"时":{"docs":{},"遇":{"docs":{},"到":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}},"docs":{}}}}}},"）":{"docs":{},"共":{"docs":{},"同":{"docs":{},"点":{"docs":{"book/6.Null和undefined的区别.html":{"ref":"book/6.Null和undefined的区别.html","tf":0.05555555555555555}}}}},"区":{"docs":{},"别":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"的":{"docs":{},"指":{"docs":{},"向":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}}}},"定":{"docs":{},"义":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"需":{"docs":{},"要":{"docs":{},"事":{"docs":{},"件":{"docs":{},"循":{"docs":{},"环":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}},"什":{"docs":{},"么":{"docs":{},"是":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}},",":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.007142857142857143},"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}},")":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}},"2":{"0":{"0":{"docs":{},")":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}},"docs":{}},"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.010714285714285714},"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169},"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}},".":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}},"j":{"docs":{},"s":{"docs":{},"实":{"docs":{},"现":{"docs":{},"继":{"docs":{},"承":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":10.00438596491228}}}}}}}}}}},"借":{"docs":{},"用":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"继":{"docs":{},"承":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"原":{"docs":{},"型":{"docs":{"book/5.如何判断一个变量是否数组？.html":{"ref":"book/5.如何判断一个变量是否数组？.html","tf":0.07692307692307693}}}}}},"设":{"docs":{},"置":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"属":{"docs":{},"性":{"docs":{},"指":{"docs":{},"向":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"对":{"docs":{},"象":{"docs":{"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{},"f":{"docs":{},"n":{"2":{"docs":{},"(":{"docs":{},")":{"docs":{},"时":{"docs":{},"遇":{"docs":{},"到":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}},"docs":{}}}}}},"）":{"docs":{},"不":{"docs":{},"同":{"docs":{},"点":{"docs":{"book/6.Null和undefined的区别.html":{"ref":"book/6.Null和undefined的区别.html","tf":0.05555555555555555}}}}},"浅":{"docs":{},"拷":{"docs":{},"贝":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}},"作":{"docs":{},"用":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}},"宏":{"docs":{},"任":{"docs":{},"务":{"docs":{},"和":{"docs":{},"微":{"docs":{},"任":{"docs":{},"务":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}},"名":{"docs":{},"词":{"docs":{},"约":{"docs":{},"定":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}},"3":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}},".":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}},"组":{"docs":{},"合":{"docs":{},"继":{"docs":{},"承":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}},"j":{"docs":{},"s":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{"book/3.js数据类型.html":{"ref":"book/3.js数据类型.html","tf":10.038461538461538}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"book/5.如何判断一个变量是否数组？.html":{"ref":"book/5.如何判断一个变量是否数组？.html","tf":0.07692307692307693}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"方":{"docs":{},"法":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"新":{"docs":{},"对":{"docs":{},"象":{"docs":{},"调":{"docs":{},"用":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"被":{"docs":{},"指":{"docs":{},"向":{"docs":{},"新":{"docs":{},"实":{"docs":{},"例":{"docs":{},"对":{"docs":{},"象":{"docs":{},"（":{"docs":{},"因":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"来":{"docs":{},"改":{"docs":{},"变":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"指":{"docs":{},"向":{"docs":{},"）":{"docs":{"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"遇":{"docs":{},"见":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}},"）":{"docs":{},"用":{"docs":{},"法":{"docs":{"book/6.Null和undefined的区别.html":{"ref":"book/6.Null和undefined的区别.html","tf":0.05555555555555555}}}},"深":{"docs":{},"拷":{"docs":{},"贝":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}},"缺":{"docs":{},"点":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}},"事":{"docs":{},"件":{"docs":{},"循":{"docs":{},"环":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"的":{"docs":{},"三":{"docs":{},"个":{"docs":{},"状":{"docs":{},"态":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}},"4":{"0":{"0":{"docs":{},")":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}},"docs":{}},"2":{"docs":{},"n":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}},"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.010714285714285714},"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}},".":{"docs":{},"实":{"docs":{},"例":{"docs":{},"与":{"docs":{},"原":{"docs":{},"型":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}}}}}},"原":{"docs":{},"型":{"docs":{},"式":{"docs":{},"继":{"docs":{},"承":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}},"j":{"docs":{},"s":{"docs":{},"有":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"判":{"docs":{},"断":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":10.010309278350515}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"book/5.如何判断一个变量是否数组？.html":{"ref":"book/5.如何判断一个变量是否数组？.html","tf":0.07692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"完":{"docs":{},"毕":{"docs":{},"的":{"docs":{},"新":{"docs":{},"对":{"docs":{},"象":{"docs":{},"地":{"docs":{},"址":{"docs":{},"，":{"docs":{},"保":{"docs":{},"存":{"docs":{},"到":{"docs":{},"等":{"docs":{},"号":{"docs":{},"左":{"docs":{},"边":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"中":{"docs":{"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}},"）":{"docs":{},"应":{"docs":{},"用":{"docs":{},"场":{"docs":{},"景":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}}}},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"和":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"异":{"docs":{},"步":{"docs":{},"封":{"docs":{},"装":{"docs":{},"a":{"docs":{},"j":{"docs":{},"a":{"docs":{},"x":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}},"5":{"docs":{},".":{"docs":{},"如":{"docs":{},"何":{"docs":{},"判":{"docs":{},"断":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"是":{"docs":{},"否":{"docs":{},"数":{"docs":{},"组":{"docs":{},"？":{"docs":{"book/5.如何判断一个变量是否数组？.html":{"ref":"book/5.如何判断一个变量是否数组？.html","tf":10.076923076923077}}}}}}}}}}}}}}},"主":{"docs":{},"任":{"docs":{},"务":{"docs":{},"完":{"docs":{},"成":{"docs":{},",":{"docs":{},"执":{"docs":{},"行":{"docs":{},"微":{"docs":{},"任":{"docs":{},"务":{"docs":{},",":{"docs":{},"即":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}}}}}},"）":{"docs":{},"练":{"docs":{},"习":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"异":{"docs":{},"步":{"docs":{},"加":{"docs":{},"载":{"docs":{},"图":{"docs":{},"片":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}},"6":{"docs":{},".":{"docs":{},"原":{"docs":{},"型":{"docs":{},"链":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"和":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{"book/6.Null和undefined的区别.html":{"ref":"book/6.Null和undefined的区别.html","tf":10.055555555555555}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"进":{"docs":{},"行":{"docs":{},"反":{"docs":{},"复":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"知":{"docs":{},"道":{"docs":{},"清":{"docs":{},"空":{"docs":{},"宏":{"docs":{},"任":{"docs":{},"务":{"docs":{},"列":{"docs":{},"表":{"docs":{},"的":{"docs":{},"宏":{"docs":{},"任":{"docs":{},"务":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}},"7":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"、":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"、":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":10.013513513513514}}}}}}}}}}}}}}}}}}}}}},"8":{"docs":{},".":{"docs":{},"防":{"docs":{},"抖":{"docs":{},"和":{"docs":{},"节":{"docs":{},"流":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":10.006849315068493}}}}}}}}},"9":{"docs":{},".":{"docs":{},"深":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"、":{"docs":{},"浅":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"？":{"docs":{},"如":{"docs":{},"何":{"docs":{},"实":{"docs":{},"现":{"docs":{},"深":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"和":{"docs":{},"浅":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"？":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":10.003571428571428}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{},"前":{"docs":{},"端":{"docs":{},"面":{"docs":{},"试":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"面":{"docs":{},"试":{"docs":{},"题":{"docs":{},"整":{"docs":{},"理":{"docs":{"./":{"ref":"./","tf":0.5}}}}}}}}}}}}}}}}}}}}},"简":{"docs":{},"介":{"docs":{"./":{"ref":"./","tf":10.5}}},"单":{"docs":{},"说":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"容":{"docs":{},"器":{"docs":{},"，":{"docs":{},"里":{"docs":{},"面":{"docs":{},"保":{"docs":{},"存":{"docs":{},"着":{"docs":{},"某":{"docs":{},"个":{"docs":{},"未":{"docs":{},"来":{"docs":{},"才":{"docs":{},"会":{"docs":{},"结":{"docs":{},"束":{"docs":{},"的":{"docs":{},"事":{"docs":{},"件":{"docs":{},"（":{"docs":{},"通":{"docs":{},"常":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"异":{"docs":{},"步":{"docs":{},"操":{"docs":{},"作":{"docs":{},"）":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"'":{"2":{"4":{"docs":{},"'":{"docs":{},",":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}}},"docs":{}},"docs":{},"d":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"'":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}}}}}}},"k":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"n":{"docs":{},"'":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}}}}}}},"l":{"docs":{},"i":{"docs":{},"w":{"docs":{},"e":{"docs":{},"n":{"docs":{},"x":{"docs":{},"u":{"docs":{},"a":{"docs":{},"n":{"docs":{},"'":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}}}}}}}}}},"w":{"docs":{},"x":{"docs":{},"'":{"docs":{},",":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514},"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}},"x":{"docs":{},"'":{"docs":{},",":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}}}}}},",":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}},"m":{"docs":{},"j":{"docs":{},"y":{"docs":{},"'":{"docs":{},",":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}}}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"'":{"docs":{},"]":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}}}}},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"'":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}}}},"x":{"docs":{},"i":{"docs":{},"a":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"'":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}}}}}}},"x":{"docs":{},"t":{"docs":{},"'":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}},"x":{"docs":{},"y":{"docs":{},"'":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}},"男":{"docs":{},"'":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}},",":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}}},"跳":{"docs":{},"'":{"docs":{},",":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}},"]":{"docs":{},",":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"'":{"docs":{},")":{"docs":{"book/3.js数据类型.html":{"ref":"book/3.js数据类型.html","tf":0.038461538461538464}},"{":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}},"'":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}},",":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}}},"}":{"docs":{},")":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}}}}},";":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.02666666666666667}}}}}}}}},"a":{"docs":{},"'":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}},",":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}},"写":{"docs":{},"代":{"docs":{},"码":{"docs":{},"'":{"docs":{},",":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}}}}},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"'":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.06666666666666667}},";":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.02666666666666667}}}}}}}}}},".":{"docs":{},"/":{"docs":{},"q":{"docs":{},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{},"'":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"i":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"'":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}},"加":{"docs":{},"载":{"docs":{},"失":{"docs":{},"败":{"docs":{},"'":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"'":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"'":{"docs":{},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"'":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.009230769230769232}}}}}}}}}}}},"/":{"docs":{},"/":{"1":{"docs":{},".":{"docs":{},"普":{"docs":{},"通":{"docs":{},"方":{"docs":{},"法":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}}}},"修":{"docs":{},"改":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"（":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"）":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}}}}}}}}}}}}}}}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"段":{"docs":{},"时":{"docs":{},"间":{"docs":{},"都":{"docs":{},"不":{"docs":{},"点":{"docs":{},"击":{"docs":{},"定":{"docs":{},"时":{"docs":{},"器":{"docs":{},"才":{"docs":{},"能":{"docs":{},"到":{"docs":{},"达":{"docs":{},"条":{"docs":{},"件":{"docs":{},"并":{"docs":{},"执":{"docs":{},"行":{"docs":{},"事":{"docs":{},"件":{"docs":{},"函":{"docs":{},"数":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}}}}}}}}}}}}}}}}}}}}}}}}}},"设":{"docs":{},"置":{"docs":{},"对":{"docs":{},"象":{"docs":{},"结":{"docs":{},"果":{"docs":{},"值":{"docs":{},"（":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"）":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}}}}}}}}}}}}}}}}}}}}}}}}}},"3":{"docs":{},".":{"docs":{},"通":{"docs":{},"过":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"会":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"后":{"docs":{},"面":{"docs":{},"不":{"docs":{},"执":{"docs":{},"行":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"4":{"docs":{},".":{"docs":{},"节":{"docs":{},"流":{"docs":{},"，":{"docs":{},"保":{"docs":{},"证":{"docs":{},"在":{"docs":{},"规":{"docs":{},"定":{"docs":{},"时":{"docs":{},"间":{"docs":{},"内":{"docs":{},"执":{"docs":{},"行":{"docs":{},"一":{"docs":{},"次":{"docs":{},"执":{"docs":{},"行":{"docs":{},"函":{"docs":{},"数":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}}}}}}}}}}}}}}}}}}}}},"5":{"docs":{},".":{"docs":{},"使":{"docs":{},"用":{"docs":{},"时":{"docs":{},"间":{"docs":{},"戳":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"实":{"docs":{},"现":{"docs":{},"节":{"docs":{},"流":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}}}}}}}}}}}}}},"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.05333333333333334},"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.017543859649122806},"book/3.js数据类型.html":{"ref":"book/3.js数据类型.html","tf":0.038461538461538464},"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.1958762886597938},"book/6.Null和undefined的区别.html":{"ref":"book/6.Null和undefined的区别.html","tf":0.05555555555555555},"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.05357142857142857},"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.10666666666666667},"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.04819277108433735},"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.030303030303030304},"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.0375},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}}}}},"防":{"docs":{},"抖":{"docs":{},"就":{"docs":{},"是":{"docs":{},"同":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"在":{"docs":{},"一":{"docs":{},"定":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"间":{"docs":{},"隔":{"docs":{},"内":{"docs":{},"，":{"docs":{},"将":{"docs":{},"多":{"docs":{},"次":{"docs":{},"出":{"docs":{},"发":{"docs":{},"变":{"docs":{},"成":{"docs":{},"一":{"docs":{},"次":{"docs":{},"触":{"docs":{},"发":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.029411764705882353}}}}}},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"方":{"docs":{},"法":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}},"让":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"变":{"docs":{},"成":{"docs":{},"p":{"docs":{"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.029411764705882353}}}}}}}}}},"b":{"docs":{},"t":{"docs":{},"n":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"声":{"docs":{},"明":{"docs":{},"函":{"docs":{},"数":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"方":{"docs":{},"法":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.012048192771084338}}}}}}}},"{":{"docs":{},"f":{"docs":{},"n":{"docs":{},":":{"docs":{},"f":{"docs":{},"}":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}}},"不":{"docs":{},"使":{"docs":{},"用":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"指":{"docs":{},"向":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}}}}}}}}}}},"此":{"docs":{},"处":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"分":{"docs":{},"别":{"docs":{},"指":{"docs":{},"向":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"对":{"docs":{},"象":{"docs":{},"p":{"1":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"面":{"docs":{},"代":{"docs":{},"码":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{},"函":{"docs":{},"数":{"docs":{},"异":{"docs":{},"步":{"docs":{},"请":{"docs":{},"求":{"docs":{},"一":{"docs":{},"张":{"docs":{},"图":{"docs":{},"片":{"docs":{},"，":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"函":{"docs":{},"数":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"延":{"docs":{},"时":{"5":{"docs":{},"秒":{"docs":{},"的":{"docs":{},"异":{"docs":{},"步":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"他":{"docs":{},"们":{"docs":{},"在":{"docs":{},"一":{"docs":{},"起":{"docs":{},"放":{"docs":{},"在":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"中":{"docs":{},"赛":{"docs":{},"跑":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"5":{"docs":{},"秒":{"docs":{},"内":{"docs":{},"图":{"docs":{},"片":{"docs":{},"请":{"docs":{},"求":{"docs":{},"成":{"docs":{},"功":{"docs":{},"那":{"docs":{},"么":{"docs":{},"便":{"docs":{},"进":{"docs":{},"入":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"执":{"docs":{},"行":{"docs":{},"正":{"docs":{},"常":{"docs":{},"的":{"docs":{},"流":{"docs":{},"程":{"docs":{},"。":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}},"还":{"docs":{},"未":{"docs":{},"成":{"docs":{},"功":{"docs":{},"返":{"docs":{},"回":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"则":{"docs":{},"进":{"docs":{},"入":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"，":{"docs":{},"报":{"docs":{},"“":{"docs":{},"图":{"docs":{},"片":{"docs":{},"请":{"docs":{},"求":{"docs":{},"超":{"docs":{},"时":{"docs":{},"”":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{},"是":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"类":{"docs":{},"型":{"docs":{},"对":{"docs":{},"象":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"方":{"docs":{},"法":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"方":{"docs":{},"法":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}}},"保":{"docs":{},"存":{"docs":{},"回":{"docs":{},"调":{"docs":{},"函":{"docs":{},"数":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}},"修":{"docs":{},"改":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}}}}}},"状":{"docs":{},"态":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}},"判":{"docs":{},"断":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}},"状":{"docs":{},"态":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}},"同":{"docs":{},"步":{"docs":{},"调":{"docs":{},"用":{"docs":{},"[":{"docs":{},"执":{"docs":{},"行":{"docs":{},"器":{"docs":{},"函":{"docs":{},"数":{"docs":{},"]":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}}}}},"声":{"docs":{},"明":{"docs":{},"属":{"docs":{},"性":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"对":{"docs":{},"象":{"docs":{},"成":{"docs":{},"功":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}},"得":{"docs":{},"知":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"是":{"docs":{},"成":{"docs":{},"功":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}}}},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}},"每":{"docs":{},"个":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"对":{"docs":{},"象":{"docs":{},"都":{"docs":{},"成":{"docs":{},"功":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}}}}}}}},"添":{"docs":{},"加":{"docs":{},"属":{"docs":{},"性":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}},"调":{"docs":{},"用":{"docs":{},"回":{"docs":{},"调":{"docs":{},"函":{"docs":{},"数":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}},"成":{"docs":{},"功":{"docs":{},"的":{"docs":{},"回":{"docs":{},"调":{"docs":{},"函":{"docs":{},"数":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}}}}}}}}}}}}},"=":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.10666666666666667},"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.11842105263157894},"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.0945945945945946},"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.0958904109589041},"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.10357142857142858},"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.05333333333333334},"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.08823529411764706},"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.08433734939759036},"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.050505050505050504},"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.06432748538011696},"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.1111111111111111},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.055384615384615386}},"=":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.02666666666666667},"book/5.如何判断一个变量是否数组？.html":{"ref":"book/5.如何判断一个变量是否数组？.html","tf":0.07692307692307693},"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.017543859649122806},"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.027777777777777776}},"=":{"docs":{"book/3.js数据类型.html":{"ref":"book/3.js数据类型.html","tf":0.038461538461538464},"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.007142857142857143},"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.012307692307692308}}}},">":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.02054794520547945},"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.02666666666666667},"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169},"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.03125},"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.04093567251461988},"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.041666666666666664},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.05846153846153846}}}},"_":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"_":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},",":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}},"o":{"docs":{},"b":{"docs":{},"j":{"1":{"docs":{},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}},"docs":{}}}}}}}}}}}}}}}},"a":{"docs":{},"g":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334},"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.02702702702702703}},"e":{"docs":{},":":{"1":{"8":{"docs":{},",":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}},"docs":{}},"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.017543859649122806}}},",":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}},"r":{"docs":{},"r":{"docs":{"book/5.如何判断一个变量是否数组？.html":{"ref":"book/5.如何判断一个变量是否数组？.html","tf":0.07692307692307693},"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.02142857142857143},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}},"a":{"docs":{},"y":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464},"book/5.如何判断一个变量是否数组？.html":{"ref":"book/5.如何判断一个变量是否数组？.html","tf":0.07692307692307693}},"]":{"docs":{},"”":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"book/5.如何判断一个变量是否数组？.html":{"ref":"book/5.如何判断一个变量是否数组？.html","tf":0.07692307692307693}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"book/5.如何判断一个变量是否数组？.html":{"ref":"book/5.如何判断一个变量是否数组？.html","tf":0.07692307692307693}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"_":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"_":{"docs":{"book/5.如何判断一个变量是否数组？.html":{"ref":"book/5.如何判断一个变量是否数组？.html","tf":0.07692307692307693}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}},"docs":{}}}}}}}},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.010714285714285714}}}},"2":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.010714285714285714}}}},"docs":{}}}},"docs":{}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}},"g":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.02702702702702703}},")":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}}},"docs":{}}}}}}}}}},";":{"docs":{"book/6.Null和undefined的区别.html":{"ref":"book/6.Null和undefined的区别.html","tf":0.05555555555555555}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},"b":{"docs":{},",":{"docs":{},"[":{"docs":{},"'":{"docs":{},"女":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"学":{"docs":{},"习":{"docs":{},"'":{"docs":{},"]":{"docs":{},")":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"b":{"docs":{},")":{"docs":{},"(":{"docs":{},"'":{"docs":{},"女":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"学":{"docs":{},"习":{"docs":{},"'":{"docs":{},")":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}}}}}}}}}}},",":{"docs":{},"'":{"docs":{},"女":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"学":{"docs":{},"习":{"docs":{},"'":{"docs":{},")":{"docs":{},"(":{"docs":{},")":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"b":{"docs":{},",":{"docs":{},"'":{"docs":{},"女":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"学":{"docs":{},"习":{"docs":{},"'":{"docs":{},")":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}}}}}}},"复":{"docs":{},"制":{"docs":{},"数":{"docs":{},"组":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"调":{"docs":{},"用":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"指":{"docs":{},"向":{"docs":{},"实":{"docs":{},"例":{"docs":{},"对":{"docs":{},"象":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"只":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"为":{"docs":{},"数":{"docs":{},"字":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"，":{"docs":{},"自":{"docs":{},"己":{"docs":{},"身":{"docs":{},"上":{"docs":{},"有":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"、":{"docs":{},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"、":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"等":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"原":{"docs":{},"型":{"docs":{},"上":{"docs":{},"有":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"、":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"等":{"docs":{},"方":{"docs":{},"法":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}}},"b":{"docs":{},"c":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}},"j":{"docs":{},"a":{"docs":{},"x":{"docs":{},"请":{"docs":{},"求":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"1":{"docs":{},"(":{"docs":{},")":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.0125}}}}},"2":{"docs":{},"(":{"docs":{},")":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.0125}}}}},"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.03125}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.01875}}}}}},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"在":{"docs":{},"所":{"docs":{},"有":{"docs":{},"异":{"docs":{},"步":{"docs":{},"操":{"docs":{},"作":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"后":{"docs":{},"才":{"docs":{},"执":{"docs":{},"行":{"docs":{},"回":{"docs":{},"调":{"docs":{},"。":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}}}},"t":{"docs":{},"e":{"docs":{"book/3.js数据类型.html":{"ref":"book/3.js数据类型.html","tf":0.038461538461538464},"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}},")":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.030927835051546393}}},"]":{"docs":{},"”":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}}}}}}}}}}}}},"a":{"docs":{"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}}},"a":{"docs":{},"y":{"docs":{},")":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.0547945205479452}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"b":{"docs":{},"t":{"docs":{},"n":{"docs":{},"'":{"docs":{},")":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}},"s":{"docs":{},"'":{"docs":{},")":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"#":{"docs":{},"b":{"docs":{},"t":{"docs":{},"n":{"docs":{},"'":{"docs":{},")":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"'":{"docs":{},")":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"渲":{"docs":{},"染":{"docs":{},"（":{"docs":{},"表":{"docs":{},"示":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"事":{"docs":{},"件":{"docs":{},"循":{"docs":{},"环":{"docs":{},"结":{"docs":{},"束":{"docs":{},"）":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"1":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}}}}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},"{":{"docs":{},"i":{"docs":{},"d":{"docs":{},":":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"{":{"docs":{},"i":{"docs":{},"d":{"docs":{},":":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"{":{"docs":{},"i":{"docs":{},"d":{"docs":{},":":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}}}}}}}}}}}}},"docs":{},"c":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.02666666666666667},"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.039473684210526314},"book/3.js数据类型.html":{"ref":"book/3.js数据类型.html","tf":0.07692307692307693},"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.020618556701030927},"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.0410958904109589},"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.007142857142857143},"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.024096385542168676},"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.050505050505050504},"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.025},"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.017543859649122806},"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.012307692307692308}},"(":{"docs":{},")":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015},"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514},"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.0136986301369863},"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.007142857142857143},"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102},"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.011695906432748537}},"{":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514},"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334},"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.012048192771084338}},"}":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}},"f":{"docs":{},"n":{"docs":{},",":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}},"]":{"docs":{},"”":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}}},"(":{"docs":{},")":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}}}}}},"l":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}},"l":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.027777777777777776}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015},"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315},"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.007142857142857143}}}}},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.02054794520547945}}}}},"n":{"1":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}},"(":{"docs":{},")":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}},"2":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.0125}},"(":{"docs":{},")":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}},"docs":{},"(":{"docs":{},")":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.0273972602739726}}}},":":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},"{":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}}}}}}}}}},":":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.007142857142857143}}},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.007142857142857143}}}}}}},"o":{"docs":{},"(":{"docs":{},")":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169},"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.020202020202020204}},"{":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}}},":":{"docs":{},"f":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"'":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{},",":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{},",":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},")":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"s":{"docs":{},"中":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"都":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"属":{"docs":{},"性":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"属":{"docs":{},"性":{"docs":{},"指":{"docs":{},"向":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"原":{"docs":{},"型":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"由":{"docs":{},"原":{"docs":{},"型":{"docs":{},"对":{"docs":{},"象":{"docs":{},"派":{"docs":{},"生":{"docs":{},"的":{"docs":{},"子":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"都":{"docs":{},"有":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"属":{"docs":{},"性":{"docs":{},"。":{"docs":{},"子":{"docs":{},"对":{"docs":{},"象":{"docs":{},"就":{"docs":{},"叫":{"docs":{},"做":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"从":{"docs":{},"实":{"docs":{},"例":{"docs":{},"原":{"docs":{},"型":{"docs":{},"中":{"docs":{},"获":{"docs":{},"取":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"属":{"docs":{},"性":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"任":{"docs":{},"务":{"docs":{},"大":{"docs":{},"致":{"docs":{},"分":{"docs":{},"为":{"docs":{},"两":{"docs":{},"种":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}},"想":{"docs":{},"实":{"docs":{},"现":{"docs":{},"继":{"docs":{},"承":{"docs":{},"的":{"docs":{},"目":{"docs":{},"的":{"docs":{},"：":{"docs":{},"重":{"docs":{},"复":{"docs":{},"利":{"docs":{},"用":{"docs":{},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"属":{"docs":{},"性":{"docs":{},"和":{"docs":{},"方":{"docs":{},"法":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}}}}}}}}}}}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"1":{"docs":{},")":{"docs":{},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}},"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.010714285714285714}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"n":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}}}},"y":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.05333333333333334},"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.039473684210526314},"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315},"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.02666666666666667},"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.029411764705882353},"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.018072289156626505},"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.01875},"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.029239766081871343},"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.015384615384615385}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.010714285714285714}},";":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"]":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.007142857142857143}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"]":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"1":{"docs":{},":":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}},"'":{"1":{"2":{"3":{"docs":{},"'":{"docs":{},",":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}},"docs":{}},"docs":{}},"docs":{}}}},"2":{"docs":{},":":{"docs":{},"'":{"2":{"3":{"4":{"docs":{},"'":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}},"docs":{}},"docs":{}},"docs":{}}}},"3":{"docs":{},":":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}},"4":{"docs":{},":":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}},"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403},"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.02702702702702703},"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713},"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.018072289156626505}},":":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.017543859649122806},"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713},"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.012048192771084338}},"'":{"docs":{},"l":{"docs":{},"w":{"docs":{},"x":{"docs":{},"'":{"docs":{},",":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}}},"s":{"docs":{},":":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}},")":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}},"n":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"book/3.js数据类型.html":{"ref":"book/3.js数据类型.html","tf":0.07692307692307693},"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464},"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.02054794520547945},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}},":":{"docs":{},"表":{"docs":{},"示":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"即":{"docs":{},"将":{"docs":{},"指":{"docs":{},"向":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"用":{"docs":{},"于":{"docs":{},"主":{"docs":{},"动":{"docs":{},"释":{"docs":{},"放":{"docs":{},"指":{"docs":{},"向":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{"book/6.Null和undefined的区别.html":{"ref":"book/6.Null和undefined的区别.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"“":{"docs":{},"没":{"docs":{},"有":{"docs":{},"对":{"docs":{},"象":{"docs":{},"”":{"docs":{},"，":{"docs":{},"即":{"docs":{},"该":{"docs":{},"处":{"docs":{},"不":{"docs":{},"应":{"docs":{},"该":{"docs":{},"有":{"docs":{},"值":{"docs":{},"。":{"docs":{},"典":{"docs":{},"型":{"docs":{},"用":{"docs":{},"法":{"docs":{"book/6.Null和undefined的区别.html":{"ref":"book/6.Null和undefined的区别.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"book/3.js数据类型.html":{"ref":"book/3.js数据类型.html","tf":0.038461538461538464},"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}}}},"o":{"docs":{},"w":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.0136986301369863}}}}},"p":{"1":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}},"2":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.012048192771084338}}},"docs":{"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.058823529411764705},"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.029239766081871343},"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.027777777777777776}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}},"2":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}},"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.04},"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}},"(":{"1":{"6":{"docs":{},",":{"docs":{},"'":{"docs":{},"l":{"docs":{},"w":{"docs":{},"x":{"docs":{},"'":{"docs":{},")":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}}}}},"7":{"docs":{},",":{"docs":{},"'":{"docs":{},"l":{"docs":{},"w":{"docs":{},"x":{"docs":{},"x":{"docs":{},"'":{"docs":{},")":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}}}}}},"docs":{}},"docs":{},")":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.06666666666666667},"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},")":{"docs":{},"{":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}}},",":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}}},"'":{"docs":{},"l":{"docs":{},"w":{"docs":{},"x":{"docs":{},"'":{"docs":{},")":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.012048192771084338}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},"{":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.012048192771084338}}}}}}}}},".":{"docs":{},"_":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"o":{"docs":{},"_":{"docs":{},"_":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.05333333333333334}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.02666666666666667}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},",":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.018072289156626505}}}}},"n":{"docs":{},"d":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"变":{"docs":{},"成":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"或":{"docs":{},"者":{"docs":{},"由":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"变":{"docs":{},"成":{"docs":{},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}},";":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},",":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.03508771929824561},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},",":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.0125},"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.017543859649122806},"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.015384615384615385}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"[":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"[":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{},"=":{"docs":{},">":{"docs":{"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{},"是":{"docs":{},"，":{"docs":{},"将":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"从":{"docs":{},"‘":{"docs":{},"未":{"docs":{},"完":{"docs":{},"成":{"docs":{},"’":{"docs":{},"变":{"docs":{},"为":{"docs":{},"‘":{"docs":{},"成":{"docs":{},"功":{"docs":{},"’":{"docs":{},"，":{"docs":{},"即":{"docs":{},"从":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"同":{"docs":{},"步":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"进":{"docs":{},"入":{"docs":{},"主":{"docs":{},"线":{"docs":{},"程":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"对":{"docs":{},"外":{"docs":{},"提":{"docs":{},"供":{"docs":{},"统":{"docs":{},"一":{"docs":{},"的":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}},"异":{"docs":{},"步":{"docs":{},"编":{"docs":{},"程":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"方":{"docs":{},"案":{"docs":{},"，":{"docs":{},"解":{"docs":{},"决":{"docs":{},"了":{"docs":{},"地":{"docs":{},"狱":{"docs":{},"回":{"docs":{},"调":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"链":{"docs":{},"式":{"docs":{},"调":{"docs":{},"动":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"接":{"docs":{},"受":{"docs":{},"一":{"docs":{},"个":{"docs":{},"「":{"docs":{},"函":{"docs":{},"数":{"docs":{},"」":{"docs":{},"作":{"docs":{},"为":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"该":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"分":{"docs":{},"别":{"docs":{},"是":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"和":{"docs":{},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"。":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"特":{"docs":{},"点":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}},"（":{"docs":{},"首":{"docs":{},"字":{"docs":{},"母":{"docs":{},"小":{"docs":{},"写":{"docs":{},"）":{"docs":{},"对":{"docs":{},"象":{"docs":{},"指":{"docs":{},"的":{"docs":{},"是":{"docs":{},"“":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"实":{"docs":{},"例":{"docs":{},"对":{"docs":{},"象":{"docs":{},"”":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}},"s":{"docs":{},"i":{"docs":{},"e":{"docs":{},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}},"a":{"docs":{},"m":{"docs":{"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888}},"s":{"docs":{},")":{"docs":{"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888}}}}}}},".":{"docs":{},"_":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"_":{"docs":{"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.029411764705882353}}}}}}}}}}}},"s":{"docs":{},"：":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}},";":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"g":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334},"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}},"e":{"docs":{},",":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.013157894736842105}},".":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},")":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.024096385542168676}},"e":{"docs":{},")":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}},"=":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.029411764705882353}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"{":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}},"s":{"docs":{},"t":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}},";":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}},"总":{"docs":{},"是":{"docs":{},"（":{"docs":{},"非":{"docs":{},"严":{"docs":{},"格":{"docs":{},"模":{"docs":{},"式":{"docs":{},"下":{"docs":{},"）":{"docs":{},"指":{"docs":{},"向":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"而":{"docs":{},"具":{"docs":{},"体":{"docs":{},"指":{"docs":{},"向":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"基":{"docs":{},"于":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"环":{"docs":{},"境":{"docs":{},"动":{"docs":{},"态":{"docs":{},"绑":{"docs":{},"定":{"docs":{},"的":{"docs":{},"，":{"docs":{},"而":{"docs":{},"非":{"docs":{},"函":{"docs":{},"数":{"docs":{},"被":{"docs":{},"声":{"docs":{},"明":{"docs":{},"时":{"docs":{},"的":{"docs":{},"环":{"docs":{},"境":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}},"o":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.02666666666666667},"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015},"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.05154639175257732},"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.0136986301369863}},")":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}},"i":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"f":{"docs":{},"n":{"docs":{},",":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.02054794520547945}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}}}}}},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"n":{"docs":{},",":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"book/3.js数据类型.html":{"ref":"book/3.js数据类型.html","tf":0.038461538461538464},"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.10309278350515463}},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}},"{":{"docs":{},"a":{"docs":{},":":{"1":{"docs":{},"}":{"docs":{},")":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}},"docs":{}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}}}}}}}},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.03424657534246575}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}},"]":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}},"a":{"docs":{},"r":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.05333333333333334},"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403},"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.06756756756756757},"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.0547945205479452},"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.007142857142857143},"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.04},"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.11764705882352941},"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.05421686746987952},"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.050505050505050504},"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.017543859649122806},"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888}},"允":{"docs":{},"许":{"docs":{},"变":{"docs":{},"量":{"docs":{},"名":{"docs":{},"重":{"docs":{},"复":{"docs":{},"，":{"docs":{},"即":{"docs":{},"可":{"docs":{},"以":{"docs":{},"多":{"docs":{},"次":{"docs":{},"重":{"docs":{},"复":{"docs":{},"声":{"docs":{},"明":{"docs":{},"；":{"docs":{},"而":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"和":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"不":{"docs":{},"可":{"docs":{},"以":{"docs":{"book/10.对比一下var、const、let.html":{"ref":"book/10.对比一下var、const、let.html","tf":0.16666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"用":{"docs":{},"于":{"docs":{},"声":{"docs":{},"明":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"而":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"用":{"docs":{},"于":{"docs":{},"声":{"docs":{},"明":{"docs":{},"常":{"docs":{},"量":{"docs":{"book/10.对比一下var、const、let.html":{"ref":"book/10.对比一下var、const、let.html","tf":0.16666666666666666}}}}}}}}}}}}}}}}}}}}}}}}},"声":{"docs":{},"明":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"块":{"docs":{},"级":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"，":{"docs":{},"在":{"docs":{},"全":{"docs":{},"部":{"docs":{},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"有":{"docs":{},"效":{"docs":{},"，":{"docs":{},"（":{"docs":{},"因":{"docs":{},"为":{"docs":{},"变":{"docs":{},"量":{"docs":{},"提":{"docs":{},"升":{"docs":{},"）":{"docs":{},"；":{"docs":{},"而":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"和":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"声":{"docs":{},"明":{"docs":{},"只":{"docs":{},"在":{"docs":{},"块":{"docs":{},"级":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"内":{"docs":{},"使":{"docs":{},"用":{"docs":{"book/10.对比一下var、const、let.html":{"ref":"book/10.对比一下var、const、let.html","tf":0.16666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"存":{"docs":{},"在":{"docs":{},"变":{"docs":{},"量":{"docs":{},"提":{"docs":{},"升":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"先":{"docs":{},"使":{"docs":{},"用":{"docs":{},"后":{"docs":{},"声":{"docs":{},"明":{"docs":{},"；":{"docs":{},"而":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"和":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"只":{"docs":{},"能":{"docs":{},"先":{"docs":{},"声":{"docs":{},"明":{"docs":{},"后":{"docs":{},"使":{"docs":{},"用":{"docs":{"book/10.对比一下var、const、let.html":{"ref":"book/10.对比一下var、const、let.html","tf":0.16666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}},"u":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.010714285714285714},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}},"e":{"docs":{},":":{"docs":{},"f":{"docs":{},"c":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}}}}}}}}}}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"v":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}}}}}},"{":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334},"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.06578947368421052},"book/3.js数据类型.html":{"ref":"book/3.js数据类型.html","tf":0.07692307692307693},"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.05405405405405406},"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.11643835616438356},"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.05},"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.04},"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.04819277108433735},"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.09090909090909091},"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.0625},"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.08187134502923976},"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.09722222222222222},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.14461538461538462}},"}":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015},"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713},"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.029411764705882353}},",":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.007142857142857143}}},";":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}},"\"":{"docs":{},"奔":{"docs":{},"驰":{"docs":{},"\"":{"docs":{},"}":{"docs":{"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.029411764705882353}}}}}},"法":{"docs":{},"拉":{"docs":{},"利":{"docs":{},"\"":{"docs":{},"}":{"docs":{"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.029411764705882353}}}}}}}}}}}}}},"}":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.02666666666666667},"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.06578947368421052},"book/3.js数据类型.html":{"ref":"book/3.js数据类型.html","tf":0.07692307692307693},"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.06756756756756757},"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.0958904109589041},"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.039285714285714285},"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334},"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.029411764705882353},"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.07228915662650602},"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.08080808080808081},"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.025},"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.03508771929824561},"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.05555555555555555},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.08923076923076922}},";":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015},"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.007142857142857143},"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.02666666666666667}}},",":{"1":{"0":{"0":{"0":{"docs":{},")":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}},"docs":{}},"docs":{}},"docs":{}},"5":{"0":{"0":{"0":{"docs":{},")":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.0136986301369863},"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.010714285714285714},"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334},"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169},"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.020202020202020204},"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.015384615384615385}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},")":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"=":{"docs":{},">":{"docs":{},"{":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},")":{"docs":{"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888}}}}}}},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}},"e":{"docs":{},"{":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}},")":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169},"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.0125},"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.029239766081871343},"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.041666666666666664},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.036923076923076927}},"(":{"docs":{},")":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169},"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.0125}}}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}},";":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.0125},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.012307692307692308}}}}},"原":{"docs":{},"型":{"docs":{},"链":{"docs":{},"：":{"docs":{},"每":{"docs":{},"个":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"都":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"原":{"docs":{},"型":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"原":{"docs":{},"型":{"docs":{},"对":{"docs":{},"象":{"docs":{},"都":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"向":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"而":{"docs":{},"实":{"docs":{},"例":{"docs":{},"都":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"向":{"docs":{},"原":{"docs":{},"型":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"被":{"docs":{},"用":{"docs":{},"于":{"docs":{},"复":{"docs":{},"制":{"docs":{},"现":{"docs":{},"有":{"docs":{},"实":{"docs":{},"例":{"docs":{},"来":{"docs":{},"生":{"docs":{},"成":{"docs":{},"新":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}},"它":{"docs":{},"是":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"值":{"docs":{},"对":{"docs":{},"象":{"docs":{},"都":{"docs":{},"会":{"docs":{},"有":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"属":{"docs":{},"性":{"docs":{},"，":{"docs":{},"指":{"docs":{},"向":{"docs":{},"该":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"原":{"docs":{},"型":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"例":{"docs":{},"：":{"docs":{},"是":{"docs":{},"类":{"docs":{},"在":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"之":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"一":{"docs":{},"个":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"获":{"docs":{},"取":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"时":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"中":{"docs":{},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"属":{"docs":{},"性":{"docs":{},"，":{"docs":{},"当":{"docs":{},"不":{"docs":{},"能":{"docs":{},"读":{"docs":{},"取":{"docs":{},"到":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"属":{"docs":{},"性":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"从":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"的":{"docs":{},"原":{"docs":{},"型":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"中":{"docs":{},"读":{"docs":{},"取":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"读":{"docs":{},"取":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"属":{"docs":{},"性":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"找":{"docs":{},"不":{"docs":{},"到":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"查":{"docs":{},"找":{"docs":{},"与":{"docs":{},"对":{"docs":{},"象":{"docs":{},"关":{"docs":{},"联":{"docs":{},"的":{"docs":{},"原":{"docs":{},"型":{"docs":{},"中":{"docs":{},"的":{"docs":{},"属":{"docs":{},"性":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"还":{"docs":{},"查":{"docs":{},"不":{"docs":{},"到":{"docs":{},"，":{"docs":{},"就":{"docs":{},"去":{"docs":{},"找":{"docs":{},"原":{"docs":{},"型":{"docs":{},"的":{"docs":{},"原":{"docs":{},"型":{"docs":{},"，":{"docs":{},"一":{"docs":{},"直":{"docs":{},"找":{"docs":{},"到":{"docs":{},"最":{"docs":{},"顶":{"docs":{},"层":{"docs":{},"位":{"docs":{},"置":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"不":{"docs":{},"作":{"docs":{},"为":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"属":{"docs":{},"性":{"docs":{},"被":{"docs":{},"调":{"docs":{},"用":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"以":{"docs":{},"普":{"docs":{},"通":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"总":{"docs":{},"是":{"docs":{},"指":{"docs":{},"向":{"docs":{},"全":{"docs":{},"局":{"docs":{},"对":{"docs":{},"象":{"docs":{},"（":{"docs":{},"在":{"docs":{},"浏":{"docs":{},"览":{"docs":{},"器":{"docs":{},"中":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"是":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"对":{"docs":{},"象":{"docs":{},"）":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"：":{"docs":{},"用":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"来":{"docs":{},"调":{"docs":{},"用":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"自":{"docs":{},"定":{"docs":{},"义":{"docs":{},"类":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}},"此":{"docs":{},"属":{"docs":{},"性":{"docs":{},"可":{"docs":{},"以":{"docs":{},"访":{"docs":{},"问":{"docs":{},"原":{"docs":{},"型":{"docs":{},"，":{"docs":{},"但":{"docs":{},"并":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"于":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"中":{"docs":{},"，":{"docs":{},"来":{"docs":{},"自":{"docs":{},"于":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"理":{"docs":{},"解":{"docs":{},"为":{"docs":{},"返":{"docs":{},"回":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},")":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"每":{"docs":{},"个":{"docs":{},"原":{"docs":{},"型":{"docs":{},"都":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"属":{"docs":{},"性":{"docs":{},"，":{"docs":{},"指":{"docs":{},"向":{"docs":{},"关":{"docs":{},"联":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"都":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"原":{"docs":{},"型":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"原":{"docs":{},"型":{"docs":{},"对":{"docs":{},"象":{"docs":{},"都":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"向":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"而":{"docs":{},"实":{"docs":{},"例":{"docs":{},"都":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"向":{"docs":{},"原":{"docs":{},"型":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"假":{"docs":{},"如":{"docs":{},"让":{"docs":{},"原":{"docs":{},"型":{"docs":{},"对":{"docs":{},"象":{"docs":{},"等":{"docs":{},"于":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"的":{"docs":{},"原":{"docs":{},"型":{"docs":{},"对":{"docs":{},"象":{"docs":{},"将":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"向":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"原":{"docs":{},"型":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"原":{"docs":{},"型":{"docs":{},"对":{"docs":{},"象":{"docs":{},"中":{"docs":{},"也":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"向":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{},"假":{"docs":{},"如":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"原":{"docs":{},"型":{"docs":{},"又":{"docs":{},"是":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"上":{"docs":{},"述":{"docs":{},"关":{"docs":{},"系":{"docs":{},"依":{"docs":{},"然":{"docs":{},"成":{"docs":{},"立":{"docs":{},"。":{"docs":{},"如":{"docs":{},"此":{"docs":{},"层":{"docs":{},"层":{"docs":{},"递":{"docs":{},"进":{"docs":{},"，":{"docs":{},"就":{"docs":{},"构":{"docs":{},"成":{"docs":{},"了":{"docs":{},"实":{"docs":{},"例":{"docs":{},"与":{"docs":{},"原":{"docs":{},"型":{"docs":{},"的":{"docs":{},"链":{"docs":{},"条":{"docs":{},"。":{"docs":{},"这":{"docs":{},"就":{"docs":{},"是":{"docs":{},"所":{"docs":{},"谓":{"docs":{},"的":{"docs":{},"原":{"docs":{},"型":{"docs":{},"链":{"docs":{},"。":{"docs":{"book/1.原型链.html":{"ref":"book/1.原型链.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"\"":{"docs":{},"m":{"docs":{},"j":{"docs":{},"y":{"docs":{},"\"":{"docs":{},",":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}},"y":{"docs":{},"h":{"docs":{},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"\"":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"\"":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"\"":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.020618556701030927}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"\"":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}}}}},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},"\"":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}}}}}}}}},"a":{"docs":{},"\"":{"docs":{},"}":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}},"(":{"2":{"docs":{},")":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}},"3":{"docs":{},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}},"docs":{},")":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015},"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315},"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.02666666666666667},"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169},"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.0125}},"{":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.0125}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},"{":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169},"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}},"}":{"docs":{},")":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}},"{":{"docs":{},"a":{"docs":{},":":{"1":{"docs":{},"}":{"docs":{},")":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}},"docs":{}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.009230769230769232}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},")":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}},"x":{"docs":{},"h":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}},"e":{"docs":{},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}}}}},"o":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}},"[":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}},",":{"3":{"docs":{},"]":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.007142857142857143}}}},"docs":{},"[":{"3":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{},",":{"5":{"docs":{},"]":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.010714285714285714}}}},"docs":{}}}},"docs":{}}},"4":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{},",":{"5":{"docs":{},"]":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.03214285714285714}}}},"docs":{}}}},"docs":{}}},"docs":{}}}},"3":{"docs":{},"]":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}},"docs":{}}},"2":{"docs":{},",":{"2":{"docs":{},",":{"docs":{},"[":{"4":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{},",":{"5":{"docs":{},"]":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.010714285714285714}}}},"docs":{}}}},"docs":{}}},"docs":{}}}},"docs":{}}},"docs":{},"'":{"docs":{},"唱":{"docs":{},"'":{"docs":{},",":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.017543859649122806}}}}}},"]":{"docs":{"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},",":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},",":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"]":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}},"c":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.007142857142857143}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"1":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.021929824561403508}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"b":{"docs":{},"y":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"'":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"'":{"docs":{},")":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},".":{"docs":{},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}}}}}},"2":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.017543859649122806}}},"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}},"(":{"docs":{},"'":{"docs":{},"女":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}}}}},"男":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}}}}}},")":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}},"{":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}}}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}},"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"1":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}},"docs":{},")":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}},",":{"docs":{},"输":{"docs":{},"出":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}},";":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}},"2":{"docs":{},")":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}},",":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}},";":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}},"会":{"docs":{},"被":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},",":{"docs":{},"放":{"docs":{},"入":{"docs":{},"微":{"docs":{},"任":{"docs":{},"务":{"docs":{},"队":{"docs":{},"列":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}}}}}},"3":{"docs":{},")":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}},",":{"docs":{},"输":{"docs":{},"出":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}},";":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}},"5":{"docs":{},")":{"docs":{},";":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}},"7":{"docs":{},")":{"docs":{},";":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}},"9":{"docs":{},")":{"docs":{},";":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}},"docs":{},"'":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"m":{"docs":{},"i":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}}},"执":{"docs":{},"行":{"docs":{},"次":{"docs":{},"数":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"1":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.0125}}},"2":{"docs":{},"'":{"docs":{},")":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}},"docs":{}}}}}},"f":{"docs":{},"n":{"2":{"docs":{},"'":{"docs":{},")":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}},",":{"docs":{},"输":{"docs":{},"出":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}},"docs":{}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"1":{"docs":{},"'":{"docs":{},")":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}},"2":{"docs":{},"'":{"docs":{},")":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}},"docs":{}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.0125}}}}}}},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"'":{"docs":{},")":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"1":{"docs":{},")":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},")":{"docs":{},";":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}}}}}}}}},"2":{"docs":{},")":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},")":{"docs":{},";":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}}}}}}}}},"docs":{}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"o":{"docs":{},"b":{"docs":{},"y":{"docs":{},")":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},")":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},")":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}},"d":{"docs":{},")":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}},";":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.02666666666666667}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}},")":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.07228915662650602}},"/":{"docs":{},"/":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.029411764705882353}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.02142857142857143}}},"s":{"docs":{},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.02142857142857143}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}},"docs":{}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}},";":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.0125},"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.027777777777777776}}}}}}}}}}}}}}},"t":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.05714285714285714},"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}},"在":{"docs":{},"声":{"docs":{},"明":{"docs":{},"变":{"docs":{},"量":{"docs":{},"时":{"docs":{},"必":{"docs":{},"须":{"docs":{},"为":{"docs":{},"其":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"，":{"docs":{},"在":{"docs":{},"声":{"docs":{},"明":{"docs":{},"之":{"docs":{},"后":{"docs":{},"不":{"docs":{},"可":{"docs":{},"改":{"docs":{},"变":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"声":{"docs":{},"明":{"docs":{},"的":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"则":{"docs":{},"会":{"docs":{},"存":{"docs":{},"储":{"docs":{},"引":{"docs":{},"用":{"docs":{},"地":{"docs":{},"址":{"docs":{},"，":{"docs":{},"地":{"docs":{},"址":{"docs":{},"不":{"docs":{},"会":{"docs":{},"改":{"docs":{},"变":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"地":{"docs":{},"址":{"docs":{},"中":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"对":{"docs":{},"象":{"docs":{},"可":{"docs":{},"以":{"docs":{},"改":{"docs":{},"变":{"docs":{"book/10.对比一下var、const、let.html":{"ref":"book/10.对比一下var、const、let.html","tf":0.16666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}},"(":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}}}}},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.030303030303030304},"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.027777777777777776},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}},"e":{"docs":{},"r":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.020202020202020204}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.020202020202020204}}}}}}}}}}}},")":{"docs":{"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888}}},"+":{"docs":{},"+":{"docs":{"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},")":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"和":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"都":{"docs":{},"是":{"docs":{},"对":{"docs":{},"函":{"docs":{},"数":{"docs":{},"进":{"docs":{},"行":{"docs":{},"直":{"docs":{},"接":{"docs":{},"调":{"docs":{},"用":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"是":{"docs":{},"依":{"docs":{},"次":{"docs":{},"传":{"docs":{},"参":{"docs":{},"，":{"docs":{},"一":{"docs":{},"一":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"o":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}}}}}},"r":{"1":{"docs":{},"=":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.029411764705882353}}}}}}},"2":{"docs":{},"=":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.029411764705882353}}}}}}},"docs":{}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.009230769230769232}},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}},"a":{"docs":{},"(":{"docs":{},")":{"docs":{},"为":{"docs":{},"例":{"docs":{"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.029411764705882353}}}}}},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.029411764705882353}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.029411764705882353}}}}}}}}}}}}}}}},".":{"docs":{},"将":{"docs":{},"类":{"docs":{},"数":{"docs":{},"组":{"docs":{},"对":{"docs":{},"象":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"数":{"docs":{},"组":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"时":{"docs":{},"间":{"docs":{},"绑":{"docs":{},"定":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"指":{"docs":{},"向":{"docs":{},"绑":{"docs":{},"定":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"(":{"docs":{},"'":{"docs":{},"奔":{"docs":{},"驰":{"docs":{},"'":{"docs":{},")":{"docs":{"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.029411764705882353}}}}}},"法":{"docs":{},"拉":{"docs":{},"利":{"docs":{},"'":{"docs":{},")":{"docs":{"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.029411764705882353}}}}}}}}},"=":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},"{":{"docs":{"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}},")":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}},":":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}}}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},":":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},",":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}}}},":":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.007142857142857143}}}},"h":{"docs":{},"o":{"docs":{},"b":{"docs":{},"y":{"docs":{},":":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}}},"b":{"docs":{},"i":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}},"y":{"docs":{},")":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.02702702702702703}}}}}}},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"代":{"docs":{},"码":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}}}}}},"i":{"docs":{},"s":{"docs":{},":":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}},"'":{"docs":{},",":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"a":{"docs":{},")":{"docs":{"book/3.js数据类型.html":{"ref":"book/3.js数据类型.html","tf":0.038461538461538464}}}}}}}}}},"f":{"docs":{},"(":{"docs":{},"!":{"docs":{},"a":{"docs":{"book/3.js数据类型.html":{"ref":"book/3.js数据类型.html","tf":0.038461538461538464}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},")":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"h":{"docs":{},"r":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.05154639175257732},"book/5.如何判断一个变量是否数组？.html":{"ref":"book/5.如何判断一个变量是否数组？.html","tf":0.07692307692307693},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.02666666666666667}},":":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}}}},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}},"g":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"1":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.007142857142857143},"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}},".":{"docs":{},"b":{"docs":{},".":{"docs":{},"f":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.007142857142857143}}}}}}},"2":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.014285714285714285}},".":{"docs":{},"b":{"docs":{},".":{"docs":{},"f":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.007142857142857143}}}}}}},"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015},"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.007142857142857143},"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334},"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.024096385542168676}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.020618556701030927}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"是":{"docs":{},"把":{"docs":{},"现":{"docs":{},"有":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"属":{"docs":{},"性":{"docs":{},"，":{"docs":{},"挂":{"docs":{},"到":{"docs":{},"新":{"docs":{},"建":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"原":{"docs":{},"型":{"docs":{},"上":{"docs":{},"，":{"docs":{},"新":{"docs":{},"建":{"docs":{},"对":{"docs":{},"象":{"docs":{},"为":{"docs":{},"空":{"docs":{},"对":{"docs":{},"象":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"[":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},")":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}},"docs":{}}},"docs":{}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},"{":{"docs":{},"}":{"docs":{},")":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}},"{":{"docs":{},"a":{"docs":{},":":{"1":{"docs":{},"}":{"docs":{},")":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}},"docs":{}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"book/5.如何判断一个变量是否数组？.html":{"ref":"book/5.如何判断一个变量是否数组？.html","tf":0.07692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}},"(":{"docs":{},"{":{"docs":{},"}":{"docs":{},",":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}}}}},"]":{"docs":{},"”":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}}}},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.010714285714285714}}},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"]":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"]":{"docs":{},";":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}},".":{"docs":{},"a":{"docs":{},"(":{"docs":{},")":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}},";":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}}}}}},"b":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}},"(":{"docs":{},")":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}},";":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}}}}},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}},"f":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}},"o":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"1":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},"]":{"docs":{},")":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}},"docs":{}}}},"docs":{}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"1":{"docs":{},",":{"2":{"docs":{},")":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}}}}}},"r":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.012307692307692308}},"e":{"docs":{"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015},"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514},"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.0273972602739726},"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713},"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169},"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.050505050505050504},"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.017543859649122806},"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.018461538461538463}},";":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}}}}}}},"g":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},")":{"docs":{"book/3.js数据类型.html":{"ref":"book/3.js数据类型.html","tf":0.038461538461538464}}}}}}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"j":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"'":{"docs":{},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"'":{"docs":{},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}},"j":{"docs":{"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.027777777777777776}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269},"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888}},")":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.0125},"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.017543859649122806},"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.018461538461538463}}},"(":{"docs":{},"'":{"docs":{},"失":{"docs":{},"败":{"docs":{},"'":{"docs":{},")":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}},"e":{"docs":{},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}}}},"r":{"docs":{},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.012307692307692308}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{},"：":{"docs":{},"在":{"docs":{},"异":{"docs":{},"步":{"docs":{},"操":{"docs":{},"作":{"docs":{},"失":{"docs":{},"败":{"docs":{},"将":{"docs":{},"参":{"docs":{},"数":{"docs":{},"传":{"docs":{},"递":{"docs":{},"出":{"docs":{},"去":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269},"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888}},"e":{"docs":{},"(":{"4":{"docs":{},")":{"docs":{},";":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}},"8":{"docs":{},")":{"docs":{},";":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}},"docs":{},")":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{},")":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},")":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}},"x":{"docs":{},"h":{"docs":{},"r":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}},"v":{"docs":{},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.009230769230769232}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{},"：":{"docs":{},"在":{"docs":{},"异":{"docs":{},"步":{"docs":{},"操":{"docs":{},"作":{"docs":{},"成":{"docs":{},"功":{"docs":{},"时":{"docs":{},"将":{"docs":{},"参":{"docs":{},"数":{"docs":{},"传":{"docs":{},"递":{"docs":{},"出":{"docs":{},"去":{"docs":{},"；":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},")":{"docs":{"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.027777777777777776}}}}}}}}}},",":{"docs":{"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888}}}}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"v":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{},"而":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.008771929824561403}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}},"'":{"docs":{},"a":{"docs":{},"'":{"docs":{},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}},",":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}},"(":{"docs":{},"(":{"docs":{},")":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.02054794520547945},"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625},"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.012307692307692308}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"2":{"docs":{},")":{"docs":{},",":{"2":{"0":{"0":{"0":{"docs":{},")":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},"{":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}},"l":{"docs":{},"f":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.012048192771084338},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}}}}}}}},"s":{"docs":{},"t":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.006153846153846154}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"'":{"docs":{},")":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.0125}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.012307692307692308}}}}}}},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"原":{"docs":{},"型":{"docs":{},"链":{"docs":{},"继":{"docs":{},"承":{"docs":{},"原":{"docs":{},"型":{"docs":{},"上":{"docs":{},"的":{"docs":{},"属":{"docs":{},"性":{"docs":{},"和":{"docs":{},"方":{"docs":{},"法":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}}}}}}}}}},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"法":{"docs":{},"传":{"docs":{},"递":{"docs":{},"参":{"docs":{},"数":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}}}}},"拓":{"docs":{},"展":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"复":{"docs":{},"制":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}},"借":{"docs":{},"用":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"a":{"docs":{},"内":{"docs":{},"部":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"临":{"docs":{},"时":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"传":{"docs":{},"入":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"作":{"docs":{},"为":{"docs":{},"这":{"docs":{},"个":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"原":{"docs":{},"型":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"返":{"docs":{},"回":{"docs":{},"这":{"docs":{},"个":{"docs":{},"临":{"docs":{},"时":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"实":{"docs":{},"例":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"一":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}},"二":{"docs":{},"：":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{},"中":{"docs":{},"谁":{"docs":{},"调":{"docs":{},"用":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"就":{"docs":{},"指":{"docs":{},"向":{"docs":{},"谁":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}}}}}}}}}}},"中":{"docs":{},"。":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}},"就":{"docs":{},"是":{"docs":{},"异":{"docs":{},"步":{"docs":{},"操":{"docs":{},"作":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"后":{"docs":{},"，":{"docs":{},"用":{"docs":{},"链":{"docs":{},"式":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"执":{"docs":{},"行":{"docs":{},"回":{"docs":{},"调":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"本":{"docs":{},"质":{"docs":{},"上":{"docs":{},"，":{"docs":{},"函":{"docs":{},"数":{"docs":{},"a":{"docs":{},"是":{"docs":{},"对":{"docs":{},"传":{"docs":{},"入":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"执":{"docs":{},"行":{"docs":{},"了":{"docs":{},"一":{"docs":{},"次":{"docs":{},"浅":{"docs":{},"拷":{"docs":{},"贝":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}}}}}}}}}}}}}}}}}},"缺":{"docs":{},"点":{"docs":{},"：":{"docs":{},"借":{"docs":{},"用":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"缺":{"docs":{},"点":{"docs":{},"是":{"docs":{},"方":{"docs":{},"法":{"docs":{},"都":{"docs":{},"在":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"无":{"docs":{},"法":{"docs":{},"实":{"docs":{},"现":{"docs":{},"函":{"docs":{},"数":{"docs":{},"复":{"docs":{},"用":{"docs":{},"。":{"docs":{},"在":{"docs":{},"父":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"原":{"docs":{},"型":{"docs":{},"中":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"对":{"docs":{},"子":{"docs":{},"类":{"docs":{},"型":{"docs":{},"而":{"docs":{},"言":{"docs":{},"也":{"docs":{},"是":{"docs":{},"不":{"docs":{},"可":{"docs":{},"见":{"docs":{},"的":{"docs":{},"，":{"docs":{},"结":{"docs":{},"果":{"docs":{},"所":{"docs":{},"有":{"docs":{},"类":{"docs":{},"型":{"docs":{},"都":{"docs":{},"只":{"docs":{},"能":{"docs":{},"用":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"式":{"docs":{},"。":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"实":{"docs":{},"例":{"docs":{},"共":{"docs":{},"享":{"docs":{},"所":{"docs":{},"有":{"docs":{},"继":{"docs":{},"承":{"docs":{},"的":{"docs":{},"属":{"docs":{},"性":{"docs":{},"和":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"传":{"docs":{},"递":{"docs":{},"子":{"docs":{},"类":{"docs":{},"类":{"docs":{},"型":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"传":{"docs":{},"递":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"这":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"一":{"docs":{},"次":{"docs":{},"性":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"（":{"docs":{},"没":{"docs":{},"办":{"docs":{},"法":{"docs":{},"定":{"docs":{},"制":{"docs":{},"化":{"docs":{},"）":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"无":{"docs":{},"论":{"docs":{},"在":{"docs":{},"什":{"docs":{},"么":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"都":{"docs":{},"会":{"docs":{},"调":{"docs":{},"用":{"docs":{},"两":{"docs":{},"次":{"docs":{},"超":{"docs":{},"类":{"docs":{},"型":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"；":{"docs":{},"一":{"docs":{},"次":{"docs":{},"是":{"docs":{},"在":{"docs":{},"创":{"docs":{},"建":{"docs":{},"子":{"docs":{},"类":{"docs":{},"型":{"docs":{},"原":{"docs":{},"型":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"在":{"docs":{},"子":{"docs":{},"类":{"docs":{},"型":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"内":{"docs":{},"部":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"法":{"docs":{},"判":{"docs":{},"断":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"如":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"、":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}}}}}}}}}}}},"让":{"docs":{},"一":{"docs":{},"个":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"原":{"docs":{},"型":{"docs":{},"是":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"这":{"docs":{},"个":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"出":{"docs":{},"来":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"就":{"docs":{},"具":{"docs":{},"有":{"docs":{},"该":{"docs":{},"实":{"docs":{},"例":{"docs":{},"的":{"docs":{},"属":{"docs":{},"性":{"docs":{"book/2.Js实现继承的方式.html":{"ref":"book/2.Js实现继承的方式.html","tf":0.0043859649122807015}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"&":{"docs":{},"&":{"docs":{"book/3.js数据类型.html":{"ref":"book/3.js数据类型.html","tf":0.038461538461538464},"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}},"b":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514},"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.007142857142857143}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"book/3.js数据类型.html":{"ref":"book/3.js数据类型.html","tf":0.038461538461538464}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"改":{"docs":{},"变":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"指":{"docs":{},"向":{"docs":{},"后":{"docs":{},"不":{"docs":{},"会":{"docs":{},"立":{"docs":{},"即":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"永":{"docs":{},"久":{"docs":{},"改":{"docs":{},"变":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.02054794520547945}}}},"t":{"docs":{},"n":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.0136986301369863},"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"'":{"docs":{},",":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315},"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"'":{"docs":{},",":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"从":{"docs":{},"索":{"docs":{},"引":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"到":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"的":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"方":{"docs":{},"法":{"docs":{},"调":{"docs":{},"用":{"docs":{},"是":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"指":{"docs":{},"向":{"docs":{},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"所":{"docs":{},"属":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}}},"a":{"docs":{},"r":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169},"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}},"(":{"docs":{},")":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169},"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}},"{":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}},":":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}},"：":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"book/3.js数据类型.html":{"ref":"book/3.js数据类型.html","tf":0.038461538461538464},"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464},"book/6.Null和undefined的区别.html":{"ref":"book/6.Null和undefined的区别.html","tf":0.05555555555555555},"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},"表":{"docs":{},"示":{"docs":{},"变":{"docs":{},"脸":{"docs":{},"声":{"docs":{},"明":{"docs":{},"但":{"docs":{},"并":{"docs":{},"未":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"，":{"docs":{},"它":{"docs":{},"是":{"docs":{},"所":{"docs":{},"有":{"docs":{},"未":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"默":{"docs":{},"认":{"docs":{},"值":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{"book/6.Null和undefined的区别.html":{"ref":"book/6.Null和undefined的区别.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"“":{"docs":{},"缺":{"docs":{},"少":{"docs":{},"值":{"docs":{},"”":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"此":{"docs":{},"处":{"docs":{},"应":{"docs":{},"该":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"值":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{},"定":{"docs":{},"义":{"docs":{},"。":{"docs":{},"典":{"docs":{},"型":{"docs":{},"用":{"docs":{},"法":{"docs":{},"是":{"docs":{},"：":{"docs":{"book/6.Null和undefined的区别.html":{"ref":"book/6.Null和undefined的区别.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}}}}}}}}},"i":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}},"r":{"docs":{},"l":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}},",":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}},"为":{"docs":{"book/3.js数据类型.html":{"ref":"book/3.js数据类型.html","tf":0.038461538461538464}},"什":{"docs":{},"么":{"docs":{},"要":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}}}}}},"函":{"docs":{},"数":{"docs":{},"套":{"docs":{},"函":{"docs":{},"数":{"docs":{},"：":{"docs":{},"为":{"docs":{},"了":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"变":{"docs":{},"量":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}},"基":{"docs":{},"本":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"book/3.js数据类型.html":{"ref":"book/3.js数据类型.html","tf":0.038461538461538464}}}}}}}}}}}}}}},"如":{"docs":{},"何":{"docs":{},"判":{"docs":{},"断":{"docs":{},"一":{"docs":{},"个":{"docs":{},"值":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"book/3.js数据类型.html":{"ref":"book/3.js数据类型.html","tf":0.038461538461538464}}}}}}}}}}}}}}},"果":{"docs":{},"不":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"，":{"docs":{},"就":{"docs":{},"无":{"docs":{},"法":{"docs":{},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"闭":{"docs":{},"包":{"docs":{},"。":{"docs":{},"只":{"docs":{},"要":{"docs":{},"让":{"docs":{},"外":{"docs":{},"面":{"docs":{},"可":{"docs":{},"以":{"docs":{},"访":{"docs":{},"问":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"函":{"docs":{},"数":{"docs":{},"就":{"docs":{},"行":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"book/3.js数据类型.html":{"ref":"book/3.js数据类型.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"b":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"箭":{"docs":{},"头":{"docs":{},"函":{"docs":{},"数":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"就":{"docs":{},"永":{"docs":{},"远":{"docs":{},"指":{"docs":{},"向":{"docs":{},"它":{"docs":{},"所":{"docs":{},"定":{"docs":{},"义":{"docs":{},"时":{"docs":{},"所":{"docs":{},"处":{"docs":{},"的":{"docs":{},"全":{"docs":{},"局":{"docs":{},"执":{"docs":{},"行":{"docs":{},"环":{"docs":{},"境":{"docs":{},"中":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"，":{"docs":{},"几":{"docs":{},"遍":{"docs":{},"这":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"作":{"docs":{},"为":{"docs":{},"对":{"docs":{},"象":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"调":{"docs":{},"用":{"docs":{},"，":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"依":{"docs":{},"旧":{"docs":{},"指":{"docs":{},"向":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"定":{"docs":{},"义":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"大":{"docs":{},"括":{"docs":{},"号":{"docs":{},"{":{"docs":{},"}":{"docs":{},"无":{"docs":{},"法":{"docs":{},"行":{"docs":{},"程":{"docs":{},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"独":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"环":{"docs":{},"境":{"docs":{},"，":{"docs":{},"它":{"docs":{},"依":{"docs":{},"旧":{"docs":{},"是":{"docs":{},"处":{"docs":{},"于":{"docs":{},"全":{"docs":{},"局":{"docs":{},"执":{"docs":{},"行":{"docs":{},"环":{"docs":{},"境":{"docs":{},"中":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"符":{"docs":{},"号":{"docs":{},"：":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"book/3.js数据类型.html":{"ref":"book/3.js数据类型.html","tf":0.038461538461538464}}}}}}}}}}},"“":{"docs":{},"[":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.041237113402061855}}}}}}}}}},"内":{"docs":{},"置":{"docs":{},"对":{"docs":{},"象":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}}},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}}}}}}}}}}},"复":{"docs":{},"杂":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"里":{"docs":{},"，":{"docs":{},"除":{"docs":{},"了":{"docs":{},"函":{"docs":{},"数":{"docs":{},"返":{"docs":{},"回":{"docs":{},"了":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"均":{"docs":{},"返":{"docs":{},"回":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"返":{"docs":{},"回":{"docs":{},"\"":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"\"":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}}}}}}}}},"拼":{"docs":{},"接":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}},"普":{"docs":{},"通":{"docs":{},"对":{"docs":{},"象":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"“":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"”":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}}},"智":{"docs":{},"能":{"docs":{},"用":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"是":{"docs":{},"用":{"docs":{},"于":{"docs":{},"检":{"docs":{},"测":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"属":{"docs":{},"性":{"docs":{},"是":{"docs":{},"否":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"某":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"原":{"docs":{},"型":{"docs":{},"链":{"docs":{},"上":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"特":{"docs":{},"例":{"docs":{"book/4.js有哪些判断类型的方法.html":{"ref":"book/4.js有哪些判断类型的方法.html","tf":0.010309278350515464}}}},"都":{"docs":{},"是":{"docs":{},"基":{"docs":{},"本":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"保":{"docs":{},"存":{"docs":{},"在":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{"book/6.Null和undefined的区别.html":{"ref":"book/6.Null和undefined的区别.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}},"改":{"docs":{},"变":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"指":{"docs":{},"向":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"利":{"docs":{},"用":{"docs":{},"后":{"docs":{},"续":{"docs":{},"参":{"docs":{},"数":{"docs":{},"传":{"docs":{},"参":{"2":{"docs":{},".":{"docs":{},"区":{"docs":{},"别":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}}}},"docs":{}}}}}}}}}}}},"（":{"1":{"docs":{},"）":{"docs":{},"作":{"docs":{},"为":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"该":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"不":{"docs":{},"是":{"docs":{},"对":{"docs":{},"象":{"docs":{"book/6.Null和undefined的区别.html":{"ref":"book/6.Null和undefined的区别.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}},"变":{"docs":{},"量":{"docs":{},"被":{"docs":{},"声":{"docs":{},"明":{"docs":{},"了":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"没":{"docs":{},"有":{"docs":{},"赋":{"docs":{},"值":{"docs":{"book/6.Null和undefined的区别.html":{"ref":"book/6.Null和undefined的区别.html","tf":0.05555555555555555}}}}}}}}}}}}}}},"_":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}}}}}}},"箭":{"docs":{},"筒":{"docs":{},"函":{"docs":{},"数":{"docs":{},"没":{"docs":{},"有":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}}}}}}}}}}}}}},"全":{"docs":{},"局":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"和":{"docs":{},"普":{"docs":{},"通":{"docs":{},"函":{"docs":{},"数":{"docs":{},"吊":{"docs":{},"桶":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"指":{"docs":{},"向":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"采":{"docs":{},"用":{"docs":{},"函":{"docs":{},"数":{"docs":{},"引":{"docs":{},"用":{"docs":{},"方":{"docs":{},"式":{"docs":{},"的":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"调":{"docs":{},"用":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"不":{"docs":{},"受":{"docs":{},"外":{"docs":{},"界":{"docs":{},"影":{"docs":{},"响":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}},"2":{"docs":{},"）":{"docs":{},"作":{"docs":{},"为":{"docs":{},"对":{"docs":{},"象":{"docs":{},"原":{"docs":{},"型":{"docs":{},"链":{"docs":{},"的":{"docs":{},"终":{"docs":{},"点":{"docs":{"book/6.Null和undefined的区别.html":{"ref":"book/6.Null和undefined的区别.html","tf":0.05555555555555555}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{},"函":{"docs":{},"数":{"docs":{},"时":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"没":{"docs":{},"有":{"docs":{},"提":{"docs":{},"供":{"docs":{"book/6.Null和undefined的区别.html":{"ref":"book/6.Null和undefined的区别.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}},"箭":{"docs":{},"头":{"docs":{},"函":{"docs":{},"数":{"docs":{},"继":{"docs":{},"承":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"指":{"docs":{},"向":{"docs":{},"永":{"docs":{},"远":{"docs":{},"不":{"docs":{},"会":{"docs":{},"改":{"docs":{},"变":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"闭":{"docs":{},"包":{"docs":{},"模":{"docs":{},"拟":{"docs":{},"私":{"docs":{},"有":{"docs":{},"方":{"docs":{},"法":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}}}}}}}}},"一":{"docs":{},"旦":{"docs":{},"状":{"docs":{},"态":{"docs":{},"改":{"docs":{},"变":{"docs":{},"，":{"docs":{},"就":{"docs":{},"不":{"docs":{},"会":{"docs":{},"再":{"docs":{},"变":{"docs":{},"，":{"docs":{},"任":{"docs":{},"何":{"docs":{},"时":{"docs":{},"候":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"结":{"docs":{},"果":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"3":{"docs":{},"）":{"docs":{},"对":{"docs":{},"象":{"docs":{},"没":{"docs":{},"有":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"的":{"docs":{},"属":{"docs":{},"性":{"docs":{"book/6.Null和undefined的区别.html":{"ref":"book/6.Null和undefined的区别.html","tf":0.05555555555555555}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"、":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},"、":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"等":{"docs":{},"方":{"docs":{},"法":{"docs":{},"不":{"docs":{},"能":{"docs":{},"改":{"docs":{},"变":{"docs":{},"箭":{"docs":{},"头":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"指":{"docs":{},"向":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"构":{"docs":{},"造":{"docs":{},"器":{"docs":{},"调":{"docs":{},"用":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}}}},"4":{"docs":{},"）":{"docs":{},"函":{"docs":{},"数":{"docs":{},"没":{"docs":{},"有":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{"book/6.Null和undefined的区别.html":{"ref":"book/6.Null和undefined的区别.html","tf":0.05555555555555555}}}}}}}}},"手":{"docs":{},"写":{"docs":{},"循":{"docs":{},"环":{"docs":{},"递":{"docs":{},"归":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}},"拓":{"docs":{},"展":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}},"箭":{"docs":{},"头":{"docs":{},"函":{"docs":{},"数":{"docs":{},"不":{"docs":{},"能":{"docs":{},"作":{"docs":{},"为":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"使":{"docs":{},"用":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}}}}}}}}}}}},"中":{"docs":{},"指":{"docs":{},"向":{"docs":{},"外":{"docs":{},"层":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}},"5":{"docs":{},"）":{"docs":{},"箭":{"docs":{},"头":{"docs":{},"函":{"docs":{},"数":{"docs":{},"没":{"docs":{},"有":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"或":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"调":{"docs":{},"用":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}}}}}}}}}}},"6":{"docs":{},"）":{"docs":{},"箭":{"docs":{},"头":{"docs":{},"函":{"docs":{},"数":{"docs":{},"没":{"docs":{},"有":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}}}}}}}}}}}}}}}},"补":{"docs":{},"充":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}},"docs":{}},":":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.08108108108108109},"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.025}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"都":{"docs":{},"是":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"要":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{"book/7.call、bind、apply的区别.html":{"ref":"book/7.call、bind、apply的区别.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}},"!":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}}}}}},"=":{"docs":{},"=":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713},"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.012307692307692308}}}}},">":{"docs":{"book/8.防抖和节流.html":{"ref":"book/8.防抖和节流.html","tf":0.00684931506849315}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"。":{"docs":{},"简":{"docs":{},"单":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"4":{"docs":{},")":{"docs":{},"，":{"docs":{},"这":{"docs":{},"行":{"docs":{},"代":{"docs":{},"码":{"docs":{},"会":{"docs":{},"直":{"docs":{},"接":{"docs":{},"出":{"docs":{},"发":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"的":{"docs":{},"回":{"docs":{},"调":{"docs":{},"函":{"docs":{},"数":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"$":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}},"'":{"docs":{},")":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.0125}}}}}},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},",":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"了":{"docs":{},"一":{"docs":{},"层":{"docs":{},"，":{"docs":{},"更":{"docs":{},"深":{"docs":{},"层":{"docs":{},"次":{"docs":{},"的":{"docs":{},"没":{"docs":{},"有":{"docs":{},"拷":{"docs":{},"贝":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.010714285714285714}}}}}}}}}}}}}}}}},"有":{"docs":{},"异":{"docs":{},"步":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"可":{"docs":{},"以":{"docs":{},"决":{"docs":{},"定":{"docs":{},"当":{"docs":{},"前":{"docs":{},"是":{"docs":{},"哪":{"docs":{},"一":{"docs":{},"种":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"由":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"中":{"docs":{},"，":{"docs":{},"存":{"docs":{},"在":{"docs":{},"浅":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"的":{"docs":{},"现":{"docs":{},"象":{"docs":{},"有":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"值":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"对":{"docs":{},"象":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}}}}}}},"常":{"docs":{},"见":{"docs":{},"的":{"docs":{},"深":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"方":{"docs":{},"式":{"docs":{},"有":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}},"宏":{"docs":{},"任":{"docs":{},"务":{"docs":{},"：":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"(":{"docs":{},"外":{"docs":{},"层":{"docs":{},"同":{"docs":{},"步":{"docs":{},"代":{"docs":{},"码":{"docs":{},")":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}}}}}}}}}},"微":{"docs":{},"任":{"docs":{},"务":{"docs":{},"：":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}},"手":{"docs":{},"写":{"docs":{},"循":{"docs":{},"环":{"docs":{},"递":{"docs":{},"归":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}},"浅":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"：":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"一":{"docs":{},"层":{"docs":{},"，":{"docs":{},"属":{"docs":{},"性":{"docs":{},"为":{"docs":{},"对":{"docs":{},"象":{"docs":{},"时":{"docs":{},"，":{"docs":{},"浅":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"是":{"docs":{},"复":{"docs":{},"制":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"指":{"docs":{},"向":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"地":{"docs":{},"址":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"深":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"开":{"docs":{},"辟":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"属":{"docs":{},"性":{"docs":{},"完":{"docs":{},"全":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"但":{"docs":{},"对":{"docs":{},"应":{"docs":{},"两":{"docs":{},"个":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"地":{"docs":{},"址":{"docs":{},"，":{"docs":{},"修":{"docs":{},"改":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"属":{"docs":{},"性":{"docs":{},"，":{"docs":{},"不":{"docs":{},"会":{"docs":{},"改":{"docs":{},"变":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"属":{"docs":{},"性":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"地":{"docs":{},"柜":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"深":{"docs":{},"层":{"docs":{},"次":{"docs":{},"，":{"docs":{},"属":{"docs":{},"性":{"docs":{},"为":{"docs":{},"对":{"docs":{},"象":{"docs":{},"时":{"docs":{},"，":{"docs":{},"深":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"是":{"docs":{},"新":{"docs":{},"开":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"指":{"docs":{},"向":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"地":{"docs":{},"址":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"存":{"docs":{},"在":{"docs":{},"弊":{"docs":{},"端":{"docs":{},"，":{"docs":{},"会":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"、":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},"和":{"docs":{},"函":{"docs":{},"数":{"docs":{"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"ref":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"里":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"改":{"docs":{},"变":{"docs":{},"了":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"指":{"docs":{},"向":{"docs":{},"，":{"docs":{},"将":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"由":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"对":{"docs":{},"象":{"docs":{},"p":{"docs":{},"e":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"由":{"docs":{},"于":{"docs":{},"箭":{"docs":{},"头":{"docs":{},"函":{"docs":{},"数":{"docs":{},"没":{"docs":{},"有":{"docs":{},"自":{"docs":{},"身":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"，":{"docs":{},"且":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"指":{"docs":{},"向":{"docs":{},"外":{"docs":{},"层":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"环":{"docs":{},"境":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"改":{"docs":{},"变":{"docs":{},"指":{"docs":{},"向":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"不":{"docs":{},"能":{"docs":{},"当":{"docs":{},"做":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"使":{"docs":{},"用":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"箭":{"docs":{},"头":{"docs":{},"函":{"docs":{},"数":{"docs":{},"不":{"docs":{},"会":{"docs":{},"创":{"docs":{},"建":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"他":{"docs":{},"没":{"docs":{},"有":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"，":{"docs":{},"它":{"docs":{},"只":{"docs":{},"会":{"docs":{},"在":{"docs":{},"自":{"docs":{},"己":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"的":{"docs":{},"上":{"docs":{},"一":{"docs":{},"层":{"docs":{},"继":{"docs":{},"承":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"箭":{"docs":{},"头":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"的":{"docs":{},"指":{"docs":{},"向":{"docs":{},"在":{"docs":{},"它":{"docs":{},"定":{"docs":{},"义":{"docs":{},"时":{"docs":{},"已":{"docs":{},"经":{"docs":{},"确":{"docs":{},"定":{"docs":{},"了":{"docs":{},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"不":{"docs":{},"会":{"docs":{},"改":{"docs":{},"变":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"它":{"docs":{},"只":{"docs":{},"会":{"docs":{},"从":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"链":{"docs":{},"的":{"docs":{},"上":{"docs":{},"一":{"docs":{},"层":{"docs":{},"继":{"docs":{},"承":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"在":{"docs":{},"箭":{"docs":{},"头":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"访":{"docs":{},"问":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"获":{"docs":{},"得":{"docs":{},"的":{"docs":{},"是":{"docs":{},"它":{"docs":{},"外":{"docs":{},"层":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"值":{"docs":{"book/11.箭头函数和普通函数区别是什么？.html":{"ref":"book/11.箭头函数和普通函数区别是什么？.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"述":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"分":{"docs":{},"别":{"docs":{},"指":{"docs":{},"向":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"1":{"docs":{},"和":{"docs":{},"c":{"docs":{},"a":{"docs":{},"e":{"2":{"docs":{"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.029411764705882353}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}},"以":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{"book/12.使用new创建对象的过程是什么样的？.html":{"ref":"book/12.使用new创建对象的过程是什么样的？.html","tf":0.029411764705882353}}}}}},"+":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}},"+":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102},"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888}}},"=":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.018072289156626505}}}}}}}},"定":{"docs":{},"时":{"docs":{},"器":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"指":{"docs":{},"向":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}},"浏":{"docs":{},"览":{"docs":{},"器":{"docs":{},"环":{"docs":{},"境":{"docs":{},"下":{"docs":{"book/13.this指向系列问题.html":{"ref":"book/13.this指向系列问题.html","tf":0.006024096385542169}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.04040404040404041}}}}},"g":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}}}}}}}},"会":{"docs":{},"增":{"docs":{},"大":{"docs":{},"内":{"docs":{},"存":{"docs":{},"使":{"docs":{},"用":{"docs":{},"量":{"docs":{},"，":{"docs":{},"滥":{"docs":{},"用":{"docs":{},"闭":{"docs":{},"包":{"docs":{},"会":{"docs":{},"影":{"docs":{},"响":{"docs":{},"性":{"docs":{},"能":{"docs":{},"，":{"docs":{},"导":{"docs":{},"致":{"docs":{},"内":{"docs":{},"存":{"docs":{},"泄":{"docs":{},"露":{"docs":{},"问":{"docs":{},"题":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"和":{"docs":{},"函":{"docs":{},"数":{"docs":{},"内":{"docs":{},"部":{"docs":{},"能":{"docs":{},"访":{"docs":{},"问":{"docs":{},"道":{"docs":{},"德":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"总":{"docs":{},"和":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"闭":{"docs":{},"包":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}},"运":{"docs":{},"行":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"立":{"docs":{},"即":{"docs":{},"执":{"docs":{},"行":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}}}}}}}}}}}},"闭":{"docs":{},"包":{"docs":{},"常":{"docs":{},"常":{"docs":{},"用":{"docs":{},"来":{"docs":{},"间":{"docs":{},"接":{"docs":{},"访":{"docs":{},"问":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"。":{"docs":{},"换":{"docs":{},"句":{"docs":{},"话":{"docs":{},"说":{"docs":{},"就":{"docs":{},"是":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{"book/14.闭包.html":{"ref":"book/14.闭包.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{},"后":{"docs":{},"面":{"docs":{},"代":{"docs":{},"码":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"v":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}}},"y":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"[":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"p":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},"{":{"docs":{"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888}}}}}}}}}}}}}}},"|":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.05}}},"不":{"docs":{},"管":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"后":{"docs":{},"面":{"docs":{},"跟":{"docs":{},"着":{"docs":{},"的":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"，":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"都":{"docs":{},"会":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"将":{"docs":{},"他":{"docs":{},"们":{"docs":{},"放":{"docs":{},"入":{"docs":{},"微":{"docs":{},"任":{"docs":{},"务":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"执":{"docs":{},"行":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"外":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"再":{"docs":{},"按":{"docs":{},"照":{"2":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}},"docs":{}}}},"创":{"docs":{},"建":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"对":{"docs":{},"象":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"立":{"docs":{},"即":{"docs":{},"执":{"docs":{},"行":{"docs":{},"里":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"步":{"docs":{},"任":{"docs":{},"务":{"docs":{},"：":{"docs":{},"可":{"docs":{},"以":{"docs":{},"立":{"docs":{},"即":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"同":{"docs":{},"步":{"docs":{},"任":{"docs":{},"务":{"docs":{},"一":{"docs":{},"般":{"docs":{},"会":{"docs":{},"直":{"docs":{},"接":{"docs":{},"进":{"docs":{},"入":{"docs":{},"到":{"docs":{},"主":{"docs":{},"线":{"docs":{},"程":{"docs":{},"中":{"docs":{},"执":{"docs":{},"行":{"docs":{},"。":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"因":{"docs":{},"为":{"docs":{},"j":{"docs":{},"s":{"docs":{},"是":{"docs":{},"一":{"docs":{},"门":{"docs":{},"单":{"docs":{},"线":{"docs":{},"程":{"docs":{},"语":{"docs":{},"言":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"因":{"docs":{},"为":{"docs":{},"需":{"docs":{},"要":{"docs":{},"调":{"docs":{},"用":{"docs":{},"接":{"docs":{},"口":{"docs":{},"或":{"docs":{},"者":{"docs":{},"进":{"docs":{},"行":{"docs":{},"其":{"docs":{},"他":{"docs":{},"需":{"docs":{},"要":{"docs":{},"延":{"docs":{},"时":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"单":{"docs":{},"线":{"docs":{},"程":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"整":{"docs":{},"个":{"docs":{},"进":{"docs":{},"程":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"单":{"docs":{},"线":{"docs":{},"程":{"docs":{},"非":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"就":{"docs":{},"是":{"docs":{},"事":{"docs":{},"件":{"docs":{},"循":{"docs":{},"环":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"外":{"docs":{},"面":{"docs":{},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"代":{"docs":{},"码":{"docs":{},",":{"docs":{},"即":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}},"宏":{"docs":{},"任":{"docs":{},"务":{"docs":{},"：":{"docs":{},"时":{"docs":{},"间":{"docs":{},"粒":{"docs":{},"度":{"docs":{},"比":{"docs":{},"较":{"docs":{},"大":{"docs":{},"，":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"间":{"docs":{},"隔":{"docs":{},"是":{"docs":{},"不":{"docs":{},"能":{"docs":{},"精":{"docs":{},"确":{"docs":{},"控":{"docs":{},"制":{"docs":{},"的":{"docs":{},"，":{"docs":{},"对":{"docs":{},"一":{"docs":{},"些":{"docs":{},"高":{"docs":{},"实":{"docs":{},"时":{"docs":{},"性":{"docs":{},"的":{"docs":{},"需":{"docs":{},"求":{"docs":{},"就":{"docs":{},"不":{"docs":{},"太":{"docs":{},"符":{"docs":{},"合":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"异":{"docs":{},"步":{"docs":{},"任":{"docs":{},"务":{"docs":{},"也":{"docs":{},"分":{"docs":{},"为":{"docs":{},"两":{"docs":{},"种":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}},"：":{"docs":{},"异":{"docs":{},"步":{"docs":{},"进":{"docs":{},"行":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"等":{"docs":{},"等":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"微":{"docs":{},"任":{"docs":{},"务":{"docs":{},"：":{"docs":{},"一":{"docs":{},"个":{"docs":{},"需":{"docs":{},"要":{"docs":{},"异":{"docs":{},"步":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"执":{"docs":{},"行":{"docs":{},"时":{"docs":{},"机":{"docs":{},"是":{"docs":{},"在":{"docs":{},"主":{"docs":{},"函":{"docs":{},"数":{"docs":{},"执":{"docs":{},"行":{"docs":{},"结":{"docs":{},"束":{"docs":{},"后":{"docs":{},"、":{"docs":{},"当":{"docs":{},"前":{"docs":{},"宏":{"docs":{},"任":{"docs":{},"务":{"docs":{},"结":{"docs":{},"束":{"docs":{},"之":{"docs":{},"前":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{},"同":{"docs":{},"步":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"依":{"docs":{},"次":{"docs":{},"次":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"微":{"docs":{},"任":{"docs":{},"务":{"docs":{},"列":{"docs":{},"表":{"docs":{},"里":{"docs":{},"的":{"docs":{},"微":{"docs":{},"任":{"docs":{},"务":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}},"找":{"docs":{},"到":{"docs":{},"同":{"docs":{},"步":{"docs":{},"任":{"docs":{},"务":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}},"宏":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"把":{"docs":{},"宏":{"docs":{},"任":{"docs":{},"务":{"docs":{},"放":{"docs":{},"到":{"docs":{},"宏":{"docs":{},"任":{"docs":{},"务":{"docs":{},"列":{"docs":{},"表":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}}}}}}},"微":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"把":{"docs":{},"微":{"docs":{},"任":{"docs":{},"务":{"docs":{},"放":{"docs":{},"到":{"docs":{},"微":{"docs":{},"任":{"docs":{},"务":{"docs":{},"列":{"docs":{},"表":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}}}}}}}}},"然":{"docs":{},"后":{"docs":{},"执":{"docs":{},"行":{"docs":{},"宏":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"宏":{"docs":{},"任":{"docs":{},"务":{"docs":{},"表":{"docs":{},"示":{"docs":{},"进":{"docs":{},"入":{"docs":{},"了":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"事":{"docs":{},"件":{"docs":{},"循":{"docs":{},"环":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"输":{"docs":{},"出":{"2":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}},"docs":{}}},"进":{"docs":{},"入":{"docs":{},"到":{"docs":{},"了":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"标":{"docs":{},"签":{"docs":{},"就":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"进":{"docs":{},"入":{"docs":{},"了":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"事":{"docs":{},"件":{"docs":{},"循":{"docs":{},"环":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}}},"阻":{"docs":{},"塞":{"docs":{"book/15.JS事件循环的理解.html":{"ref":"book/15.JS事件循环的理解.html","tf":0.00625}}}},"x":{"docs":{},"h":{"docs":{},"r":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{},",":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}},"m":{"docs":{},"l":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"状":{"docs":{},"态":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}},"回":{"docs":{},"调":{"docs":{},"。":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}},"失":{"docs":{},"败":{"docs":{},"状":{"docs":{},"态":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}},"成":{"docs":{},"功":{"docs":{},"状":{"docs":{},"态":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"从":{"docs":{},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"获":{"docs":{},"取":{"docs":{},"异":{"docs":{},"步":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"的":{"docs":{},"最":{"docs":{},"终":{"docs":{},"状":{"docs":{},"态":{"docs":{},"（":{"docs":{},"成":{"docs":{},"功":{"docs":{},"或":{"docs":{},"失":{"docs":{},"败":{"docs":{},"）":{"docs":{},"。":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}},"回":{"docs":{},"调":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"了":{"docs":{},"（":{"docs":{},"代":{"docs":{},"码":{"docs":{},"出":{"docs":{},"错":{"docs":{},"了":{"docs":{},"）":{"docs":{},"，":{"docs":{},"会":{"docs":{},"进":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}},"话":{"docs":{},"只":{"docs":{},"要":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"异":{"docs":{},"步":{"docs":{},"操":{"docs":{},"作":{"docs":{},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"毕":{"docs":{},"，":{"docs":{},"就":{"docs":{},"立":{"docs":{},"刻":{"docs":{},"执":{"docs":{},"行":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}},"首":{"docs":{},"字":{"docs":{},"母":{"docs":{},"大":{"docs":{},"写":{"docs":{},"且":{"docs":{},"单":{"docs":{},"数":{"docs":{},"形":{"docs":{},"式":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"“":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"”":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}},"复":{"docs":{},"数":{"docs":{},"形":{"docs":{},"式":{"docs":{},"，":{"docs":{},"用":{"docs":{},"于":{"docs":{},"指":{"docs":{},"代":{"docs":{},"“":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"规":{"docs":{},"范":{"docs":{},"”":{"docs":{"book/16.谈谈对promise的理解.html":{"ref":"book/16.谈谈对promise的理解.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"book/17.手写Promise.all.html":{"ref":"book/17.手写Promise.all.html","tf":0.013888888888888888}}},"判":{"docs":{},"断":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}},"状":{"docs":{},"态":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}},"存":{"docs":{},"入":{"docs":{},"到":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{"book/18.手写Promise.html":{"ref":"book/18.手写Promise.html","tf":0.003076923076923077}}}}}}}}},"length":1087},"corpusTokens":["!==","!time","\"a\"}","\"bigint\"","\"boolean\"","\"mjy\",","\"number\"","\"object\"","\"string\"","\"symbol\"","\"undefined\"","\"yhd\",","$","$.extend(true,","&&","',","'./qzone.png'","'24',","'a'","'a',","'david'","'fulfilled'","'fulfilled')","'function')","'global'","'global';","'http://www.bai.com'","'kevin'","'liwenxuan'","'lwx',","'lwxx',","'mjy',","'obj'","'obj',","'obj'})();","'obj'});","'object')","'object'){","'pending'","'pending')","'rap']","'rejected'","'rejected')","'xiaoma'","'xxt'","'xxxy'","'写代码',","'加载失败'","'男'","'男',","'跳',","'跳'],","()","(){","(2)","(3)","(const","(count","(e)","(function(){","(function(){})","(let","(new","(onrejected)","(resolve)","(result","(self.promisest","(this.promisest","(time)","(typeof","(valu","(xhr.statu","({a:1})",")","+","++","+=",",后面代码也就是","//","//1.修改对象的状态（promisestate）","//1.普通方法","//2.只有一段时间都不点击定时器才能到达条件并执行事件函数","//2.设置对象结果值（promiseresult）","//3.通过settimeout的方式第一次会执行，后面不执行","//4.节流，保证在规定时间内执行一次执行函数","//5.使用时间戳的方式实现节流","//all方法","//btn","//catch方法","//ceshi","//function声明函数","//object","//race方法","//reject方法","//resolve方法","//then方法","//true","//window","//{fn:f}","//上面代码requestimg函数异步请求一张图片，timeout函数是一个延时5秒的异步操作，我们将他们在一起放在race中赛跑","//不使用new指向window","//保存回调函数","//修改promise对象的状态","//修改状态","//判断","//判断状态","//同步调用[执行器函数]","//声明属性","//如果5秒内图片请求成功那么便进入then方法，执行正常的流程。","//如果5秒内图片还未成功返回，那么则进入catch，报“图片请求超时”的信息","//如果是promise类型对象","//将当前promise对象成功的结果","//得知对象的状态是成功","//构造函数","//此处的this分别指向person的实例对象p1","//每个promise对象都成功","//添加属性","//让this变成p","//调用回调函数","//调用成功的回调函数","//防抖就是同settimeout的方式，在一定的时间间隔内，将多次出发变成一次触发","0","0);","0;","1","1)","1,","1.array.isarray()","1.typeof","1.创建空对象","1.原型","1.原型链","1.原型链继承","1.执行fn1()时遇到","1.相同点","10.对比一下var、const、let","1000))","11.箭头函数和普通函数区别是什么？","12.使用new创建对象的过程是什么样的？","13.this指向系列问题","14.闭包","15.js事件循环的理解","16.谈谈对promise的理解","17.手写promise.al","18,","18.手写promis","19,","1）this的指向","1）为什么需要事件循环","1）什么是promis","1）共同点","1）区别","1）定义","2","2.","2.js实现继承的方式","2.object.prototype.tostring.call()","2.借用构造函数继承","2.对象原型","2.执行fn2()时遇到","2.设置对象的proto属性指向构造函数的prototype对象","200)","2）不同点","2）作用","2）名词约定","2）宏任务和微任务","2）浅拷贝","3","3.instanceof","3.js数据类型","3.obj","3.使用新对象调用函数，函数中的this被指向新实例对象（因此可以使用new关键字来改变this指向）","3.实现bind方法","3.构造函数constructor","3.组合继承","3.遇见await","3）promise的三个状态","3）事件循环","3）深拷贝","3）用法","3）缺点","4","4.js有哪些判断类型的方法","4.object.prototype.tostring.call()","4.原型式继承","4.实例与原型","4.将初始化完毕的新对象地址，保存到等号左边的变量中","4.执行","400)","42n","4）async和await","4）promise异步封装ajax","4）应用场景","5.主任务完成,执行微任务,即","5.如何判断一个变量是否数组？","5）promise异步加载图片","5）练习","6.null和undefined的区别","6.原型链","6的步骤进行反复执行，知道清空宏任务列表的宏任务","7.call、bind、apply的区别","8.防抖和节流","9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？",":","=","==","===","=>",">",">resolved。简单来说，就是resolve(4)，这行代码会直接出发then的回调函数","['唱',","[...arr]","[1,2,3]","[1,2,[3,4],5]","[1,2,[4,4],5]","[1,2]","[1,3]","[2,2,[4,4],5]","[]","[].concat.apply(arg,arguments);","[].slice.call(arguments,1);","_","_.clonedeep()","_.clonedeep(obj1)","__proto__","_thi","_this.apply(context,","a.getinfo.apply(b,['女','学习'])","a.getinfo.bind(b)('女','学习')","a.getinfo.bind(b,'女','学习')()","a.getinfo.call(b,'女','学习')","a.复制数组","a.构造函数调用，此时this指向实例对象","a:","a;","abc","ag","age,","age:","age:18,","ajax请求","all()方法：","all(promise)","all方法在所有异步操作执行完后才执行回调。","api，自己身上有all、reject、resolve等方法，原型上有then、catch等方法","apply只有两个参数，第二个参数为数字","arg","arg)","arguments[0];","arr","arr.__proto__","arr.concat()","arr.slice(0)","arr[i]","array","array.isarray(arr)","array.prototyp","array.prototype.concat()","array.prototype.slice()","array]”","arrs[0]","arrs[2][0]","async","async1()","async2()","await","b","b.从索引start到end的子数组","b.对象方法调用是，此时this指向该方法所属的对象","b:","bar","bar()","bar(){","bar:","bar：","bef","bind改变this指向后不会立即执行，而是返回一个永久改变this指向的函数","boolean","btn","btn.addeventlistener('click',","btns.addeventlistener('click',","c","c.将类数组对象转换为数组","c.通过时间绑定的方法，此时this指向绑定的对象","callback(onrejected)","callback(onresolved)","callback(type)","call和apply都是对函数进行直接调用","call和bind的参数是依次传参，一一对应的","car1=new","car2=new","catch","catch()方法：","ceshi('奔驰')","ceshi('法拉利')","ceshi=function(name){","changecount(","changecount(1)","changecount(val)","child","child('女');","child('男');","child()","child(){","child(gender)","child.getinfo();","child.info.gend","child.prototyp","child1","child1.getinfo()","child1.hoby.push('rap')","child1.info.nicknam","child1.isshow","child1.nam","child2","class","classa()为例","classa.call(p);","classa.prototyp","cleartimeout(time)","console.log('1234567');","console.log('async1","console.log('async2')","console.log('fn2')","console.log('fn2'),输出","console.log('mi","console.log('promise1')","console.log('promise2')","console.log('script","console.log('settimeout')","console.log('执行次数');","console.log(1)","console.log(1),输出","console.log(1);","console.log(10);","console.log(2)","console.log(2),","console.log(2);","console.log(2)会被阻塞,放入微任务队列","console.log(3)","console.log(3),输出","console.log(3);","console.log(5);","console.log(7);","console.log(9);","console.log(arr)","console.log(arrs)","console.log(child1)","console.log(child1.info);","console.log(child2)","console.log(child2.info);","console.log(data)","console.log(err);","console.log(local)","console.log(num)","console.log(obj2);","console.log(person.hoby)","console.log(reason)","console.log(res)","console.log(res);","console.log(this)","console.log(this)//ceshi","console.log(this.id)","console.log(this.id);","console.log(this.info)","console.log(this.info.name,","console.log(this.isshow)","console.log(this.name)","console.log(this.name,","console.log(time);","const","constructor","constructor(executor)","const在声明变量时必须为其赋值，在声明之后不可改变；如果声明的是一个对象，则会存储引用地址，地址不会改变，但是地址中的存储对象可以改变","context","copyobj(obj)","copyobj(value)","count","count)","count++","counter","counter.delcrement()","counter.intcrement()","counter.value()","createobject(obj)","createobject(person)","data","date","date().gettime()","date)","date]”","david","delay)","delcrement:function()","delet","document.createelement('span')","document.getelementbyid('btn')","document.getelementbyid('btns')","document.getelementid('#btn')","dom渲染（表示第一次事件循环结束）","end')","end)","executor(resolve,","f:","fals","feach('get',","feach(method,url)","firstclick","flag","fn()","fn1","fn1()","fn2","fn2()","fn:function(){","foo()","foo(){","foo:f","for(let","fulfil","fullfillcount","fun()","fun.prototyp","fun1","fun1();","fun1.apply({id:","fun1.bind({id:","fun1.call({id:","func","func()","function","function()","function(){","function(){}","function(fn,","function(num)","function.prototype.bind","function]”","g:","gender","gender)","gender:","getinfo:","getinfo:function(sex,","getname:","hobbi","hobby)","hoby:","html代码","id","id:","if(!a","if(count","if(firstclick)","if(flag)","if(fullfillcount","if(now","if(obj.hasproperty(prop)){","if(time)","if(typeof","if(xhr.readyst","image()","img","img.onload","img.src","instanceof","intcrement:function()","is:","is:',","isnull(a)","item.onrecjected(data)","item.onresolved(data)","jquery.entend()","json.parse()","json.parse(json.stringify(obj));","json.parse(json.stringify(obj1))","json.stringify()","js中任务大致分为两种","js中每一个函数都有一个prototype属性，这个属性指向函数的原型对象，每一个由原型对象派生的子对象，都有相同的属性。子对象就叫做构造函数，从实例原型中获取相同的属性","js代码","js想实现继承的目的：重复利用另外一个对象的属性和方法","kevin","key","local","log(num)","mutainobersv","myall([1,2,3,4]).then((data)","myall(prams){","name","name)","name1:","name1:'123',","name2:'234'","name3:","name4:","name:","name:'lwx',","names:","nan","new","newobj","newobj;","newobj[key]","newobj[prop]","now","null","null:表示一个变量即将指向一个对象，一般用于主动释放指向对象的引用","null表示“没有对象”，即该处不应该有值。典型用法","num","number","obj","obj)","obj.a()","obj.a();","obj.b","obj.b()","obj.b();","obj.bar()","obj.fn()","obj.foo()","obj.getname()","obj.getname.apply(obj1,[2])","obj.getname.call(obj1,2)","obj1","obj1)","obj1.b.f","obj2","obj2.b.f","obj[key]","obj[prop];","object","object.assign","object.assign({},","object.create()是把现有对象的属性，挂到新建对象的原型上，新建对象为空对象","object.create(person)","object.prototype.tostring.call([1,2])","object.prototype.tostring.call(arr)","object.prototype.tostring.call(function(){})","object.prototype.tostring.call(new","object.prototype.tostring.call({a:1})","object]”","onreject","onrejected()","onrejected)","onresolv","onresolved()","p","p.__proto__","p1","p2","p;","parent()","parent();","parent(gender)","parent.call(this,","parent.prototype.getinfo","pend","pending变成fulfilled或者由pending变成reject","peopl","person","person('lwx')","person()","person(16,'lwx')","person(17,'lwxx')","person(age){","person(age,","person(gender)","person(name){","person.__proro__","person.call(this,","person.nam","person.prototyp","person.prototype.constructor","person.prototype.getinfo","person.prototype.nam","person1","person2","pram","prams)","promis","promise((resolve,","promise(funct","promise)","promise.all([1,2,3,4]).then((data)=>","promise.length)","promise.nexttick","promise.race([requsetimg(),","promise.resolve(pram).then((data)","promise对象的resolve函数的作用是，将promise对象的状态从‘未完成’变为‘成功’，即从pend","promise接受一个「函数」作为参数，该函数的两个参数分别是resolve和reject。","promise是一个构造函数，对外提供统一的","promise是同步任务，可以进入主线程","promise是异步编程的一种方案，解决了地狱回调的问题，是一种链式调动的方式","promise的两个特点","promise（首字母小写）对象指的是“promise实例对象”","promsie)","prop","ps：new","r","race","race()方法：而","race(promise)","re","real()","reason","regexp)","rej","reject","reject('失败')","reject(data)","reject(e)","reject(r)","reject(reason)","reject)","reject函数的作用：在异步操作失败将参数传递出去","rendeer","requestimg()","require('jquery')","require('lodash')","res(result)","res,","resolv","resolve()","resolve(4);","resolve(8);","resolve(data)","resolve(img)","resolve(result)","resolve(span)","resolve(v)","resolve(value)","resolve(xhr.responsetext)","resolve函数的作用：在异步操作成功时将参数传递出去；","result","result.then(v","result[i]","return","return;","self","self.callbacks.foreach(item","self.promiseresult","self.promisest","setimmedi","setinterval(function(){","setintervel","settimeout","settimeout(()","settimeout(funct","settimeout(log(2),2000)","sex","sex,","shallowclone(obj)","showname()","slice(start,","span","span.innertext","start')","static","symbol('a')","symbol()","then()方法：","then(onresolved,","this.ag","this.age,","this.callback","this.callbacks.push({","this.info","this.info.age)","this.isshow","this.nam","this.name)","this.name=name;","this.promiseresult","this.promisest","this.then(undefined,","this;","this总是（非严格模式下）指向一个对象，而具体指向哪个对象是运行时基于函数的执行环境动态绑定的，而非函数被声明时的环境","throw","time","timeout()","timeout()]).then((res)","tri","trigger(fn,","trigger(real,","triggers(fn,","triggers(real,","true","true)","type(self.promiseresult)","typeerror:","typeof","typeof(new","typeof({a:1})","ui","uncaught","undefin","undefined,","undefined:表示变脸声明但并未赋值，它是所有未赋值变量的默认值var","undefined表示“缺少值”，就是此处应该有一个值，但是还没有定义。典型用法是：","url","url).then(r","url,","v","val","valu","value.then(v","value:fcuntion()","var","var允许变量名重复，即可以多次重复声明；而let和const不可以","var和let用于声明变量，而const用于声明常量","var声明的变量不存在块级作用域，在全部范围内有效，（因为变量提升）；而let和const声明只在块级作用域内使用","var存在变量提升，可以先使用后声明；而let和const只能先声明后使用","window","xhr","xhr.onreadystatechang","xhr.open(method,","xhr.send(null)","xhr.statu","xmlhttprequest()","{","{name:","{name:\"奔驰\"}","{name:\"法拉利\"}","{}","{},","{};","|","}","})","})()","}).catch((reason)","}).then((res)","}).then(funct","});","},","},1000)","},5000)","},delay)","},err=>{","},rej)","};","}els","}else{","“[object","上述代码中this分别指向car1和cae2","不管await后面跟着的是什么，await都会阻塞后面的代码，将他们放入微任务队列中，然后执行async外面的代码","为","为什么要return","为什么要函数套函数：为了隐藏变量","以var","会增大内存使用量，滥用闭包会影响性能，导致内存泄露问题","使用new","使用原型链继承原型上的属性和方法","使用拓展运算符实现的复制","使用构造函数法传递参数","借用构造函数在一个函数a内部创建一个临时的构造函数，然后将传入的对象作为这个构造函数的原型，最后返回这个临时类型的一个新实例","内置对象","再按照2","函数和函数内部能访问道德变量的总和，就是一个闭包","创建promise对象时，会立即执行里面的代码","初始状态","判断","判断状态","前端面试javascript面试题整理","原型链：每个构造函数都有一个原型对象，原型对象都包含一个指向构造函数的指针，而实例都包含一个指向原型对象的内部指针。","原型：被用于复制现有实例来生成新实例的函数","只拷贝了一层，更深层次的没有拷贝","只有异步操作的结果可以决定当前是哪一种状态，只能由","可以用来判断复杂数据类型","同步任务：可以立即执行，同步任务一般会直接进入到主线程中执行。","回调。","因为js是一门单线程语言，但是我们因为需要调用接口或者进行其他需要延时的操作，如果是单线程，就会阻塞整个进程，所以实现单线程非阻塞的方法就是事件循环","在javascript中，存在浅拷贝的现象有","基本数据类型：string","复杂数据类型里，除了函数返回了function，其他均返回object","外面的同步代码,即","失败状态","如何判断一个值是否为null","如果不return，就无法使用这个闭包。只要让外面可以访问到这个bar函数就行","存入到数组中","它是每一个值对象都会有的一个属性，指向该对象的原型","宏任务：时间粒度比较大，执行的时间间隔是不能精确控制的，对一些高实时性的需求就不太符合","定时器函数的this指向window","实例：是类在实例化之后一个一个具体的对象","对象obj的方法b是使用箭头函数定义的，这个函数中的this就永远指向它所定义时所处的全局执行环境中的this，几遍这个函数作为对象obj的方法调用，this依旧指向window对象。需要注意，定义对象的大括号{}无法行程一个单独的执行环境，它依旧是处于全局执行环境中","对象数据类型：object(array","将javascript值转换为json字符串","将json字符串转换为对象","常见的宏任务：script(外层同步代码)","常见的微任务：promise.then","常见的深拷贝方式有","异步任务也分为两种","异步任务：异步进行的任务，例如settimeout等等","当函数不作为对象的属性被调用，而是以普通函数的方式，this总是指向全局对象（在浏览器中，通常是window对象）","当执行","当获取person.constructor时，其实person中并没有constructor属性，当不能读取到constructor属性时，会从person的原型也就是person.prototype中读取","当读取实例的属性时，如果找不到，就会查找与对象关联的原型中的属性，如果还查不到，就去找原型的原型，一直找到最顶层位置","微任务：一个需要异步执行的函数，执行时机是在主函数执行结束后、当前宏任务结束之前","成功状态","手写循环递归","执行同步任务，然后依次次的执行微任务列表里的微任务","找到同步任务","找到宏任务，把宏任务放到宏任务列表","找到微任务，把微任务放到微任务列表","数组拼接","数组返回\"object\"","方法一","方法中。","方法二：object.create()","方法就是异步操作执行完后，用链式调用的方式执行回调函数。","方法调用中谁调用this就指向谁","是一个对象，从它可以获取异步操作的的最终状态（成功或失败）。","普通对象直接返回“object”","智能用来判断复杂数据类型，因为instanceof是用于检测构造函数的prototype属性是否出现在某个实例对象的原型链上","本质上，函数a是对传入的对象执行了一次浅拷贝","构造函数：用new来调用，就是为了创建一个自定义类","此属性可以访问原型，但并不存在于person.prototype中，来自于object.prototype，可以理解为返回object.getprototypeof(obj)","每个原型都有一个constructor属性，指向关联的构造函数","每个构造函数都有一个原型对象，原型对象都包含一个指向构造函数的指针，而实例都包含一个指向原型对象的内部指针。那么假如让原型对象等于一个类型的实例，此时的原型对象将包含一个指向另一个原型的指针，相应的，另一个原型对象中也包含一个指向另一个构造函数的指针。假如另一个原型又是另一个类型的实例，那么上述关系依然成立。如此层层递进，就构成了实例与原型的链条。这就是所谓的原型链。","浅拷贝：拷贝一层，属性为对象时，浅拷贝是复制，两个对象指向同一个地址","浏览器环境下","深拷贝开辟一个新的栈，两个对象属性完全相同，但对应两个不同的地址，修改一个对象的属性，不会改变另一个对象的属性","深拷贝：地柜拷贝深层次，属性为对象时，深拷贝是新开栈，两个对象指向不同的地址","然后执行宏任务，找到一个宏任务表示进入了第二次事件循环","特例","由于箭头函数没有自身的this，且this指向外层的执行环境，不能改变指向，所以不能当做构造函数使用","的","的回调抛出异常了（代码出错了），会进到这个","的话只要有一个异步操作执行完毕，就立刻执行","符号：symbol","第一个参数都是this要指向的对象","简介","简单说就是一个容器，里面保存着某个未来才会结束的事件（通常是一个异步操作）的结果。","箭头函数不会创建自己的this，它只会从自己的作用域链的上一层继承thi","箭头函数不会创建自己的this，所以他没有自己的this，它只会在自己作用域的上一层继承this。所以箭头函数中this的指向在它定义时已经确定了，之后不会改变","箭头函数没有自己的arguments对象。在箭头函数中访问arguments实际上获得的是它外层函数的arguments值","缺点：借用构造函数的缺点是方法都在构造函数中定义，因此无法实现函数复用。在父类型的原型中定义的方法，对子类型而言也是不可见的，结果所有类型都只能用构造函数模式。","缺点：对象实例共享所有继承的属性和方法。传递子类类型实例的时候，不能传递参数，因为这个对象是一次性创建的（没办法定制化）","缺点：无法判断复杂数据类型，如date、array","缺点：无论在什么情况下，都会调用两次超类型构造函数；一次是在创建子类型原型的时候，另一个是在子类型构造函数内部","让一个构造函数的原型是另一个类型的实例，那么这个构造函数new出来的实例就具有该实例的属性","输出2","运行在一个立即执行函数中","这种方式存在弊端，会忽略undefined、symbol和函数","这里new改变了this指向，将this由window指向的person的实例对象peopl","进入到了script标签就相当于进入了第一次事件循环","都可以利用后续参数传参2.区别","都是基本数据类型，保存在栈中的变量","都是改变this指向","闭包常常用来间接访问一个变量。换句话说就是隐藏一个变量","阻塞","首字母大写且单数形式，表示“promise构造函数”","首字母大写且复数形式，用于指代“promises规范”","（1）_.clonedeep()","（1）object.assign","（1）promise对象的状态不受外界影响","（1）作为函数的参数，表示该函数的参数不是对象","（1）全局作用域和普通函数吊桶，此时this指向window","（1）变量被声明了，但是没有赋值","（1）箭筒函数没有自己的thi","（1）采用函数引用方式的settimeout调用","（2）jquery.extend()","（2）slice()","（2）一旦状态改变，就不会再变，任何时候都可以得到这个结果","（2）作为对象原型链的终点","（2）用闭包模拟私有方法","（2）箭头函数继承的this指向永远不会改变","（2）调用函数时，应该提供的参数没有提供","（3）call、apply()、bind()等方法不能改变箭头函数中的this指向","（3）concat()","（3）对象没有赋值的属性","（3）构造器调用","（4）函数没有返回值","（4）手写循环递归","（4）拓展运算符","（4）箭头函数不能作为构造函数使用","（4）箭头函数中指向外层作用域的thi","（5）call或apply调用","（5）箭头函数没有自己的argument","（6）箭头函数没有prototyp","（6）补充"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"简介","keywords":"","body":"简介\n前端面试JavaScript面试题整理\n"},"book/1.原型链.html":{"url":"book/1.原型链.html","title":"1.原型链","keywords":"","body":"1.原型链\n原型：被用于复制现有实例来生成新实例的函数\n构造函数：用new来调用，就是为了创建一个自定义类\n实例：是类在实例化之后一个一个具体的对象\n原型链：每个构造函数都有一个原型对象，原型对象都包含一个指向构造函数的指针，而实例都包含一个指向原型对象的内部指针。\n1.原型\njs中每一个函数都有一个prototype属性，这个属性指向函数的原型对象，每一个由原型对象派生的子对象，都有相同的属性。子对象就叫做构造函数，从实例原型中获取相同的属性\nfunction Person(age){\n    this.age = age\n}\n\nPerson.prototype.name = 'liwenxuan'    \n\nvar person1 = new Person()\nvar person2 = new Person()\n\n\n2. __proto__\n它是每一个值对象都会有的一个属性，指向该对象的原型\nvar person = new Person()\n\nperson.__proro__ == Person.prototype // true\n\n此属性可以访问原型，但并不存在于Person.prototype中，来自于Object.prototype，可以理解为返回Object.getPrototypeOf(obj)\n\n3.构造函数constructor\n每个原型都有一个constructor属性，指向关联的构造函数\n当获取person.constructor时，其实person中并没有constructor属性，当不能读取到constructor属性时，会从person的原型也就是Person.prototype中读取\nPerson.prototype.constructor == Person // true\n\n\n4.实例与原型\n当读取实例的属性时，如果找不到，就会查找与对象关联的原型中的属性，如果还查不到，就去找原型的原型，一直找到最顶层位置\nfunction Person() {\n\n}\n\nPerson.prototype.name = 'kevin'\n\nvar person = new person()\n\nperson.name = 'David'\n\nperson.name // David\ndelete person.name\n\nperson.name // kevin\n\n\n6.原型链\n每个构造函数都有一个原型对象，原型对象都包含一个指向构造函数的指针，而实例都包含一个指向原型对象的内部指针。那么假如让原型对象等于一个类型的实例，此时的原型对象将包含一个指向另一个原型的指针，相应的，另一个原型对象中也包含一个指向另一个构造函数的指针。假如另一个原型又是另一个类型的实例，那么上述关系依然成立。如此层层递进，就构成了实例与原型的链条。这就是所谓的原型链。\n\n"},"book/2.Js实现继承的方式.html":{"url":"book/2.Js实现继承的方式.html","title":"2.Js实现继承的方式","keywords":"","body":"2.Js实现继承的方式\njs想实现继承的目的：重复利用另外一个对象的属性和方法\n1.原型链继承\n让一个构造函数的原型是另一个类型的实例，那么这个构造函数new出来的实例就具有该实例的属性\nfunction Parent() {\n    this.isShow = true\n    this.info = {\n        name:'lwx',\n        age:18,\n    };\n}\n\nParent.prototype.getInfo = function() {\n    console.log(this.info)\n    console.log(this.isShow)\n}\n\nfunction Child(){ }\nChild.prototype = new Parent();\n\nvar child = new Child()\n\nchild.info.gender = '男'\nchild.getInfo();\n\nvar child1 = new Child()\n\nchild1.isShow = false\nchild1.getInfo()\n\n缺点：对象实例共享所有继承的属性和方法。传递子类类型实例的时候，不能传递参数，因为这个对象是一次性创建的（没办法定制化）\n2.借用构造函数继承\nfunction Parent(gender) {\n  this.info = {\n    name: \"yhd\",\n    age: 19,\n    gender: gender\n  }\n}\n\nfunction Child(gender) {\n    Parent.call(this, gender)\n}\n\nlet child1 = new Child('男');\nchild1.info.nickname = 'xiaoma'\nconsole.log(child1.info);\n\nlet child2 = new Child('女');\nconsole.log(child2.info);\n\n缺点：借用构造函数的缺点是方法都在构造函数中定义，因此无法实现函数复用。在父类型的原型中定义的方法，对子类型而言也是不可见的，结果所有类型都只能用构造函数模式。\n3.组合继承\nfunction Person(gender) {\n  console.log('执行次数');\n  this.info = {\n    name: \"mjy\",\n    age: 19,\n    gender: gender\n  }\n}\n\nPerson.prototype.getInfo = function () {   // 使用原型链继承原型上的属性和方法\n  console.log(this.info.name, this.info.age)\n}\n\nfunction Child(gender) {\n  Person.call(this, gender) // 使用构造函数法传递参数\n}\n\nChild.prototype = new Person()\n\nlet child1 = new Child('男');\nchild1.info.nickname = 'xiaoma'\nchild1.getInfo()\nconsole.log(child1.info);\n\nlet child2 = new Child('女');\nconsole.log(child2.info);\n\n缺点：无论在什么情况下，都会调用两次超类型构造函数；一次是在创建子类型原型的时候，另一个是在子类型构造函数内部\n4.原型式继承\n方法一\n借用构造函数在一个函数A内部创建一个临时的构造函数，然后将传入的对象作为这个构造函数的原型，最后返回这个临时类型的一个新实例\n本质上，函数A是对传入的对象执行了一次浅拷贝\nfunction createObject(obj) {\n  function Fun() {}\n  Fun.prototype = obj\n  return new Fun()\n}\n\nlet person = {\n  name: 'mjy',\n  age: 18,\n  hoby: ['唱', '跳'],\n  showName() {\n    console.log('my name is:', this.name)\n  }\n}\n\nlet child1 = createObject(person)\nchild1.name = 'xxxy'\nchild1.hoby.push('rap')\nlet child2 = createObject(person)\n\nconsole.log(child1)\nconsole.log(child2)\nconsole.log(person.hoby) // ['唱', '跳', 'rap']\n\n方法二：Object.create()\nObject.create()是把现有对象的属性，挂到新建对象的原型上，新建对象为空对象\nlet person = {\n  name: 'mjy',\n  age: 19,\n  hoby: ['唱', '跳'],\n  showName() {\n    console.log('my name is: ', this.name)\n  }\n}\n\nlet child1 = Object.create(person)\nchild1.name = 'xxt'\nchild1.hoby.push('rap')\nlet child2 = Object.create(person)\n\nconsole.log(child1)\nconsole.log(child2)\nconsole.log(person.hoby) // ['唱', '跳', 'rap']\n\n"},"book/3.js数据类型.html":{"url":"book/3.js数据类型.html","title":"3.js数据类型","keywords":"","body":"3.js数据类型\n基本数据类型：String Number Null Undefined Boolean\n对象数据类型：Object(Array Function Date RegExp)\n符号：Symbol\n如何判断一个值是否为null\nfunction isNull(a) {\n    if(!a && typeof a === 'object') {\n        // a 为 null    \n    }\n}\n\n"},"book/4.js有哪些判断类型的方法.html":{"url":"book/4.js有哪些判断类型的方法.html","title":"4.js有哪些判断类型的方法","keywords":"","body":"4.js有哪些判断类型的方法\n1.typeof\ntypeof 1 // \"number\" \ntypeof 'a'  // \"string\"\ntypeof true  // \"boolean\"\ntypeof undefined // \"undefined\"\ntypeof Symbol() // \"symbol\"\ntypeof 42n // \"bigint\"\n\n特例\ntypeof null //object\ntypeof NaN // number\n\n复杂数据类型里，除了函数返回了function，其他均返回object\ntypeof({a:1}) // \"object\" 普通对象直接返回“object”\ntypeof [1,3] // 数组返回\"object\"\ntypeof(new Date) // 内置对象 \"object\"\n\ntypeof function(){} // function\n\n缺点：无法判断复杂数据类型，如Date、Array\n2.Object.prototype.toString.call()\nObject.prototype.toString.call({a:1}) // “[object Object]”\nObject.prototype.toString.call([1,2]) // “[object Array]”\nObject.prototype.toString.call(new Date) // “[object Date]”\nObject.prototype.toString.call(function(){}) // “[object Function]”\n\n可以用来判断复杂数据类型\n3.obj instanceof Object\n智能用来判断复杂数据类型，因为instanceof是用于检测构造函数的prototype属性是否出现在某个实例对象的原型链上\n[1,2] instanceof Array  // true\n(function(){}) instanceof Function // true\n({a:1}) instanceof Object // true\n(new Date) instanceof Date // true\n\n"},"book/5.如何判断一个变量是否数组？.html":{"url":"book/5.如何判断一个变量是否数组？.html","title":"5.如何判断一个变量是否数组？","keywords":"","body":"5.如何判断一个变量是否数组？\n1.Array.isArray()\n Array.isArray(arr)\n\n2.对象原型\narr.__proto__ == Array.prototype\n\n3.instanceof\n arr instanceof Array\n\n4.Object.prototype.toString.call()\n Object.prototype.toString.call(arr)\n\n"},"book/6.Null和undefined的区别.html":{"url":"book/6.Null和undefined的区别.html","title":"6.Null和undefined的区别","keywords":"","body":"6.Null和undefined的区别\n1）共同点\n都是基本数据类型，保存在栈中的变量\n2）不同点\n\nundefined:表示变脸声明但并未赋值，它是所有未赋值变量的默认值var a; // undefined\n\n\nnull:表示一个变量即将指向一个对象，一般用于主动释放指向对象的引用\n\n3）用法\nnull表示“没有对象”，即该处不应该有值。典型用法\n（1）作为函数的参数，表示该函数的参数不是对象\n（2）作为对象原型链的终点\nundefined表示“缺少值”，就是此处应该有一个值，但是还没有定义。典型用法是：\n（1）变量被声明了，但是没有赋值\n（2）调用函数时，应该提供的参数没有提供\n（3）对象没有赋值的属性\n（4）函数没有返回值\n"},"book/7.call、bind、apply的区别.html":{"url":"book/7.call、bind、apply的区别.html","title":"7.call、bind、apply的区别","keywords":"","body":"7.call、bind、apply的区别\n1.相同点\n\n都是改变this指向\n第一个参数都是this要指向的对象\n都可以利用后续参数传参2.区别\n\ncall和bind的参数是依次传参，一一对应的\napply只有两个参数，第二个参数为数字\ncall和apply都是对函数进行直接调用\nbind改变this指向后不会立即执行，而是返回一个永久改变this指向的函数\n\nvar a = {\n    name : 'lwx',\n    age : 18,\n    sex : '男',\n    hobby : '写代码',\n    getInfo:function(sex, hobby) {\n        console.log(this.name, this.age, sex, hobby)\n    }\n}\n\nvar b = {\n    name : 'lwxx',\n    age : '24',\n}\na.getInfo.call(b,'女','学习')\na.getInfo.apply(b,['女','学习'])\n\na.getInfo.bind(b,'女','学习')()\na.getInfo.bind(b)('女','学习')\n\n3.实现bind方法\n Function.prototype.bind = function(){\n    var _this = this;\n    var context = arguments[0];\n    var arg = [].slice.call(arguments,1);\n    return function() {\n        arg = [].concat.apply(arg,arguments);\n        _this.apply(context, arg)\n    }\n }\n\n"},"book/8.防抖和节流.html":{"url":"book/8.防抖和节流.html","title":"8.防抖和节流","keywords":"","body":"8.防抖和节流\nhtml代码\n    \n    \n\njs代码\n  var btn = document.getElementById('btn')\n  var btns = document.getElementById('btns')\n\n  btn.addEventListener('click', trigger(real, 1000))\n  btns.addEventListener('click', triggers(real, 1000))\n\n  //1.普通方法\n  function real() {\n    console.log('1234567');\n  }\n  //防抖就是同setTimeout的方式，在一定的时间间隔内，将多次出发变成一次触发\n\n  //2.只有一段时间都不点击定时器才能到达条件并执行事件函数\n  function trigger(fn, delay) {\n    var time = null\n\n    return function () {\n      if (time) {\n        console.log(time);\n        clearTimeout(time)\n      }\n\n      time = setTimeout(() => {\n        fn()\n      }, delay)\n    }\n  }\n\n  //3.通过setTimeout的方式第一次会执行，后面不执行\n  function trigger(fn, delay) {\n    var time = null\n\n    return function() {\n      var firstClick = !time\n\n      if(firstClick) {\n        fn()\n      }\n\n      if(time) {\n        clearTimeout(time)\n      }\n\n      time = setTimeout(() => {\n        time = null\n      },delay)\n    }\n  }\n\n  //4.节流，保证在规定时间内执行一次执行函数\n  function triggers(fn, delay) {\n    var flag = true\n\n    return function() {\n      if(flag) {\n        setTimeout(() => {\n          fn()\n          flag = true\n        }, delay)\n      }\n\n      flag = false\n    }\n  }\n\n  //5.使用时间戳的方式实现节流\n  function trigger(fn, delay) {\n    var bef = 0\n\n    return function(fn, delay) {\n      var now = new Date().getTime() \n\n      if(now - bef > delay) {\n        fn()\n        bef = now\n      }\n    }\n  }\n\n"},"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html":{"url":"book/9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？.html","title":"9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？","keywords":"","body":"9.深拷贝、浅拷贝的区别？如何实现深拷贝和浅拷贝？\n1）区别\n浅拷贝：拷贝一层，属性为对象时，浅拷贝是复制，两个对象指向同一个地址\n深拷贝：地柜拷贝深层次，属性为对象时，深拷贝是新开栈，两个对象指向不同的地址\n2）浅拷贝\nfunction shallowClone(obj) {\n    const newObj = {};\n    for(let prop of obj) {\n        if(obj.hasProperty(prop)){\n            newObj[prop] = obj[prop];\n        }\n    }\n    return newObj;\n}\n\n在JavaScript中，存在浅拷贝的现象有\n\nObject.assign\nArray.prototype.slice()\nArray.prototype.concat()\n使用拓展运算符实现的复制\n\n（1）Object.assign\n    var obj = {\n        name : 'lwx',\n        names: {\n            name1:'123',\n            name2:'234'\n        },\n        getInfo: function() {\n            console.log(this.name)\n        }\n    }\n\n    var newObj = Object.assign({}, obj)\n\n（2）slice()\nslice(start, end)\na.复制数组 b.从索引start到end的子数组 c.将类数组对象转换为数组\n只拷贝了一层，更深层次的没有拷贝\nconst Arr = [1,2,[3,4],5]\nconst Arrs = Arr.slice(0)\n\nArrs[2][0] = 4\n\nconsole.log(Arrs) // [1,2,[4,4],5]\nconsole.log(Arr) // [1,2,[4,4],5]\n\nArrs[0] = 2\n\nconsole.log(Arrs) // [2,2,[4,4],5]\nconsole.log(Arr) // [1,2,[4,4],5]\n\n（3）concat()\n数组拼接\n只拷贝了一层，更深层次的没有拷贝\nconst Arr = [1,2,[3,4],5]\nconst Arrs = Arr.concat()\n\nArrs[2][0] = 4\n\nconsole.log(Arrs) // [1,2,[4,4],5]\nconsole.log(Arr) // [1,2,[4,4],5]\n\nArrs[0] = 2\n\nconsole.log(Arrs) // [2,2,[4,4],5]\nconsole.log(Arr) // [1,2,[4,4],5]\n\n（4）拓展运算符\n只拷贝了一层，更深层次的没有拷贝\nconst Arr = [1,2,[3,4],5]\nconst Arrs = [...Arr]\n\nArrs[2][0] = 4\n\nconsole.log(Arrs) // [1,2,[4,4],5]\nconsole.log(Arr) // [1,2,[4,4],5]\n\nArrs[0] = 2\n\nconsole.log(Arrs) // [2,2,[4,4],5]\nconsole.log(Arr) // [1,2,[4,4],5]\n\n3）深拷贝\n深拷贝开辟一个新的栈，两个对象属性完全相同，但对应两个不同的地址，修改一个对象的属性，不会改变另一个对象的属性\n常见的深拷贝方式有\n\n_.cloneDeep()\njQuery.entend()\nJSON.stringify()\n手写循环递归\n\n（1）_.cloneDeep()\n    const _ = require('lodash')\n    const obj1 = {\n        a : 1,\n        b : { f: { g: 1 } },\n        c : [1,2,3]\n    };\n\n    const obj2 = _.cloneDeep(obj1)\n    obj2.b.f === obj1.b.f // false\n\n（2）jQuery.extend()\n    const $ = require('jQuery')\n    const obj1 = {\n        a : 1,\n        b : { f: { g: 1 } },\n        c : [1,2,3]\n    };\n\n    const obj2 = $.extend(true, {}, obj1)\n    obj2.b.f === obj1.b.f // false\n\n(3) JSON.stringify()\nJSON.stringify() 将Javascript值转换为JSON字符串\nJSON.parse() 将JSON字符串转换为对象\n const obj2 = JSON.parse(JSON.stringify(obj1))\n\n这种方式存在弊端，会忽略undefined、symbol和函数\nconst obj = {\n    name: 'A',\n    name1: undefined,\n    name3: function() {},\n    name4:  Symbol('A')\n}\nconst obj2 = JSON.parse(JSON.stringify(obj));\nconsole.log(obj2); // {name: \"A\"}\n\n（4）手写循环递归\nlet newObj = {}\n\nfunction copyObj(obj) {\n    for(let key of obj) {\n        let value = obj[key]\n        if(typeof value !== 'Object'){\n            newObj[key] = value\n        }else{\n            newObj[key] = copyObj(value)\n        }\n    }\n}\n\n"},"book/10.对比一下var、const、let.html":{"url":"book/10.对比一下var、const、let.html","title":"10.对比一下var、const、let","keywords":"","body":"10.对比一下var、const、let\n\nvar和let用于声明变量，而const用于声明常量\nvar声明的变量不存在块级作用域，在全部范围内有效，（因为变量提升）；而let和const声明只在块级作用域内使用\nvar存在变量提升，可以先使用后声明；而let和const只能先声明后使用\nvar允许变量名重复，即可以多次重复声明；而let和const不可以\nconst在声明变量时必须为其赋值，在声明之后不可改变；如果声明的是一个对象，则会存储引用地址，地址不会改变，但是地址中的存储对象可以改变\n\n"},"book/11.箭头函数和普通函数区别是什么？.html":{"url":"book/11.箭头函数和普通函数区别是什么？.html","title":"11.箭头函数和普通函数区别是什么？","keywords":"","body":"11.箭头函数和普通函数区别是什么？\n（1）箭筒函数没有自己的this\n箭头函数不会创建自己的this，所以他没有自己的this，它只会在自己作用域的上一层继承this。所以箭头函数中this的指向在它定义时已经确定了，之后不会改变\n（2）箭头函数继承的this指向永远不会改变\nvar id = 'GLOBAL';\nvar obj = {\n  id: 'OBJ',\n  a: function(){\n    console.log(this.id);\n  },\n  b: () => {\n    console.log(this.id);\n  }\n};\nobj.a();    // 'OBJ'\nobj.b();    // 'GLOBAL'\nnew obj.a()  // undefined\nnew obj.b()  // Uncaught TypeError: obj.b is not a constructor\n\n对象obj的方法b是使用箭头函数定义的，这个函数中的this就永远指向它所定义时所处的全局执行环境中的this，几遍这个函数作为对象obj的方法调用，this依旧指向window对象。需要注意，定义对象的大括号{}无法行程一个单独的执行环境，它依旧是处于全局执行环境中\n（3）call、apply()、bind()等方法不能改变箭头函数中的this指向\nvar id = 'Global';\nlet fun1 = () => {\n    console.log(this.id)\n};\nfun1();                     // 'Global'\nfun1.call({id: 'Obj'});     // 'Global'\nfun1.apply({id: 'Obj'});    // 'Global'\nfun1.bind({id: 'Obj'})();   // 'Global'\n\n（4）箭头函数不能作为构造函数使用\n由于箭头函数没有自身的this，且this指向外层的执行环境，不能改变指向，所以不能当做构造函数使用\n（5）箭头函数没有自己的arguments\n箭头函数没有自己的arguments对象。在箭头函数中访问arguments实际上获得的是它外层函数的arguments值\n（6）箭头函数没有prototype\n"},"book/12.使用new创建对象的过程是什么样的？.html":{"url":"book/12.使用new创建对象的过程是什么样的？.html","title":"12.使用new创建对象的过程是什么样的？","keywords":"","body":"12.使用new创建对象的过程是什么样的？\n以var p = new ClassA()为例\n1.创建空对象\nvar p = {}\n\n2.设置对象的proto属性指向构造函数的prototype对象\np.__proto__ = ClassA.prototype\n\n3.使用新对象调用函数，函数中的this被指向新实例对象（因此可以使用new关键字来改变this指向）\n var ceshi=function(name){\n        this.name=name;\n        console.log(this)//ceshi {name:\"奔驰\"}\n                         //ceshi {name:\"法拉利\"}\n     }\n     var car1=new ceshi('奔驰')\n     var car2=new ceshi('法拉利')\n\n上述代码中this分别指向car1和cae2\nClassA.call(p); //让this变成p\n\n4.将初始化完毕的新对象地址，保存到等号左边的变量中\n"},"book/13.this指向系列问题.html":{"url":"book/13.this指向系列问题.html","title":"13.this指向系列问题","keywords":"","body":"13.this指向系列问题\n1）this的指向\nthis总是（非严格模式下）指向一个对象，而具体指向哪个对象是运行时基于函数的执行环境动态绑定的，而非函数被声明时的环境\n（1）全局作用域和普通函数吊桶，此时this指向window\n当函数不作为对象的属性被调用，而是以普通函数的方式，this总是指向全局对象（在浏览器中，通常是window对象）\n    console.log(this) //window 浏览器环境下\n\n    //function声明函数\n    function bar(){\n        console.log(this)\n    }\n\n    var bar = function(){\n        console.log(this)\n    }\n\n    (function(){\n        console.log(this)\n    })()\n    bar() //window\n\n(2) 方法调用中谁调用this就指向谁\na.构造函数调用，此时this指向实例对象\n    function Person(age, name) {\n        this.age = age,\n        this.name = name\n        console.log(this) //此处的this分别指向Person的实例对象p1 p2\n    }\n\n    var p1 = new Person(16,'lwx')\n    var p2 = new Person(17,'lwxx')\n\nb.对象方法调用是，此时this指向该方法所属的对象\n    var obj = {\n        fn:function(){\n            console.log(this) // obj\n        }\n    }\n\n    obj.fn() //{fn:f}\n\nc.通过时间绑定的方法，此时this指向绑定的对象\n    var btn = document.getElementId('#btn')\n    btn.addEventListener('click', function(){\n        console.log(this) //btn\n    })\n\n（3）构造器调用\n //不使用new指向window\n function Person(name){\n    console.log(this) // window\n    this.name = name\n }\n\nPerson('lwx')\n\n\n// 使用new\n function Person(name){\n    this.name = name\n    console.log(this) // people\n    self = this\n }\n\n var people = new Person('lwx')\n self === people //true\n // 这里new改变了this指向，将this由window指向的Person的实例对象people\n\n（4）箭头函数中指向外层作用域的this\n箭头函数不会创建自己的this，它只会从自己的作用域链的上一层继承this\n    var obj = {\n        foo() {\n            console.log(this) \n        },\n        bar: () => {\n            console.log(this)\n        }\n    }\n\n    obj.foo() // foo:f\n    obj.bar() // window\n\n（5）call或apply调用\n    var obj = {\n        name: 1,\n        getName: function(num) {\n            return num + this.name\n        }\n    }\n\n    var obj1 = {\n        name: 2\n    }\n\n    obj.getName()\n    obj.getName.call(obj1,2)\n    obj.getName.apply(obj1,[2])\n\n（6）补充\n定时器函数的this指向window\n    setInterval(function(){\n        console.log(this) // window\n    },1000)\n\n"},"book/14.闭包.html":{"url":"book/14.闭包.html","title":"14.闭包","keywords":"","body":"14.闭包\n    // 运行在一个立即执行函数中\n    var local = abc\n    function foo() {\n        console.log(local)\n    }\n\n1）定义\n函数和函数内部能访问道德变量的总和，就是一个闭包\n    function foo(){\n        var local = 1\n        function bar() {\n            local ++ \n            return local\n        }\n\n        return bar\n    }\n\n    var func = foo()\n    func()\n\n为什么要函数套函数：为了隐藏变量\n为什么要return bar： 如果不return，就无法使用这个闭包。只要让外面可以访问到这个bar函数就行\n2）作用\n闭包常常用来间接访问一个变量。换句话说就是隐藏一个变量\n3）缺点\n\n会增大内存使用量，滥用闭包会影响性能，导致内存泄露问题\n\n4）应用场景\n（1）采用函数引用方式的setTimeout调用\n    function log(num) {\n        return function() {\n            console.log(num)\n        }\n    }\n\n    setTimeout(log(2),2000)\n\n（2）用闭包模拟私有方法\n var counter = (function(){\n    var count = 0;\n\n    function changeCount(val) {\n        count += val\n    }\n\n    return {\n        intcrement:function() {\n            changeCount(1)\n        },\n        delcrement:function() {\n            changeCount(-1)        \n        },\n        value:fcuntion() {\n            return count\n        }\n    }\n })()\n\n counter.value() // 0\n counter.intcrement()\n counter.intcrement()\n counter.value() // 2\n counter.delcrement()\n\n"},"book/15.JS事件循环的理解.html":{"url":"book/15.JS事件循环的理解.html","title":"15.JS事件循环的理解","keywords":"","body":"15.JS事件循环的理解\n1）为什么需要事件循环\n因为js是一门单线程语言，但是我们因为需要调用接口或者进行其他需要延时的操作，如果是单线程，就会阻塞整个进程，所以实现单线程非阻塞的方法就是事件循环\nJS中任务大致分为两种\n\n同步任务：可以立即执行，同步任务一般会直接进入到主线程中执行。\nps：new promise是同步任务，可以进入主线程\n异步任务：异步进行的任务，例如setTimeout等等\n\n2）宏任务和微任务\n异步任务也分为两种\n\n微任务：一个需要异步执行的函数，执行时机是在主函数执行结束后、当前宏任务结束之前\n常见的微任务：promise.then | promise.nextTick | MutainObersver | await\n宏任务：时间粒度比较大，执行的时间间隔是不能精确控制的，对一些高实时性的需求就不太符合\n常见的宏任务：script(外层同步代码) | setTimeout | setIntervel | setImmediate | UI rendeering | ajax请求\n\n3）事件循环\n\n进入到了script标签就相当于进入了第一次事件循环\n找到同步任务\n找到宏任务，把宏任务放到宏任务列表\n找到微任务，把微任务放到微任务列表\n执行同步任务，然后依次次的执行微任务列表里的微任务\ndom渲染（表示第一次事件循环结束）\n然后执行宏任务，找到一个宏任务表示进入了第二次事件循环\n再按照2-6的步骤进行反复执行，知道清空宏任务列表的宏任务\n\nconsole.log(1);\n\nnew Promise((resolve, reject) => {\n\n    console.log(2);\n\n    resolve(4);\n\n    console.log(3);\n\n}).then((res) => {\n\n    console.log(res);\n\n});\n\nsetTimeout(() => {\n\n    console.log(5);\n\n    new Promise((resolve, reject) => {\n\n        console.log(7);\n\n        resolve(8);\n\n    }).then((res) => {\n\n        console.log(res);\n\n    });\n\n    console.log(9);\n\n}, 0);\n\nconsole.log(10);\n\n创建promise对象时，会立即执行里面的代码\npromise对象的resolve函数的作用是，将promise对象的状态从‘未完成’变为‘成功’，即从pending->resolved。简单来说，就是resolve(4)，这行代码会直接出发then的回调函数\n4）async和await\n不管await后面跟着的是什么，await都会阻塞后面的代码，将他们放入微任务队列中，然后执行async外面的代码\nasync function fn1 (){\n    console.log(1)\n    await fn2()\n    console.log(2) // 阻塞\n}\n\nasync function fn2 (){\n    console.log('fn2')\n}\n\nfn1()\nconsole.log(3)\n\n// 1.执行fn1()时遇到 console.log(1),输出 1\n// 2.执行fn2()时遇到 console.log('fn2'),输出 fn2\n// 3.遇见await ,后面代码也就是 console.log(2)会被阻塞,放入微任务队列\n// 4.执行 async 外面的同步代码,即 console.log(3),输出 3\n// 5.主任务完成,执行微任务,即 console.log(2), 输出2\n\n5）练习\nasync function async1() {\n    console.log('async1 start')\n    await async2()\n    console.log('async1 end')\n}\nasync function async2() {\n    console.log('async2')\n}\nconsole.log('script start') \nsetTimeout(function () {\n    console.log('settimeout')\n})\nasync1()\nnew Promise(function (resolve) {\n    console.log('promise1')\n    resolve()\n}).then(function () {\n    console.log('promise2')\n})\nconsole.log('script end')\n\n"},"book/16.谈谈对promise的理解.html":{"url":"book/16.谈谈对promise的理解.html","title":"16.谈谈对promise的理解","keywords":"","body":"16.谈谈对promise的理解\n1）什么是promise\n\nPromise是异步编程的一种方案，解决了地狱回调的问题，是一种链式调动的方式\n\nPromise 简单说就是一个容器，里面保存着某个未来才会结束的事件（通常是一个异步操作）的结果。\n\nPromise 是一个对象，从它可以获取异步操作的的最终状态（成功或失败）。\n\nPromise是一个构造函数，对外提供统一的 API，自己身上有all、reject、resolve等方法，原型上有then、catch等方法\n\n\n2）名词约定\n\npromise（首字母小写）对象指的是“Promise实例对象”\n\nPromise 首字母大写且单数形式，表示“Promise构造函数”\n\nPromises 首字母大写且复数形式，用于指代“Promises规范”\n\nPromise的两个特点\n  （1）Promise对象的状态不受外界影响\n  （2）一旦状态改变，就不会再变，任何时候都可以得到这个结果\n\n\n3）promise的三个状态\n\npending 初始状态\nfulfilled 成功状态\nrejected 失败状态\n\nPromise 只有异步操作的结果可以决定当前是哪一种状态，只能由 pending变成fulfilled或者由pending变成rejected\n\nPromise接受一个「函数」作为参数，该函数的两个参数分别是resolve和reject。\n\nresolve函数的作用：在异步操作成功时将参数传递出去；\n\nreject函数的作用：在异步操作失败将参数传递出去\n\nthen()方法： then 方法就是异步操作执行完后，用链式调用的方式执行回调函数。\n\ncatch()方法： 当执行 resolve 的回调抛出异常了（代码出错了），会进到这个 catch 方法中。\n\nall()方法： Promise 的 all方法在所有异步操作执行完后才执行回调。\n\nrace()方法：而 race 的话只要有一个异步操作执行完毕，就立刻执行 then 回调。\n\n\n4）promise异步封装ajax\nfunction feach(method,url) {\n    let p = new Promise((resolve, reject) => {\n        let xhr = new XMLHttpRequest()\n        xhr.open(method, url, true)\n        xhr.send(null)\n\n        xhr.onreadystatechange = function() {\n            if(xhr.readyState == 4 && xhr.status == 200) {\n                resolve(xhr.responseText)\n            }else if (xhr.status == 400) {\n                reject('失败')\n            }\n        }\n    })\n\n    return p;\n}\n\nlet url = 'http://www.bai.com'\n\nfeach('get', url).then(res => {\n    console.log(res);\n},err=>{\n    console.log(err);\n})\n\n5）promise异步加载图片\nfunction requestImg() {\n    var p = new Promise((resolve, reject) => {\n        var img = New Image()\n        img.onload = function() {\n            resolve(img)\n        }\n        img.src = './qzone.png'\n    })\n\n    return p\n}\n\nfunction timeout() {\n    var p = new Promise((resolve, reject) => {\n        setTimeout(() => {\n            let span = document.createElement('span')\n            span.innerText = '加载失败'\n            resolve(span)\n        },5000)    \n    })\n\n    return p\n}\n\nPromise.race([requsetImg(), timeout()]).then((res) => {\n    console.log(res)\n}).catch((reason) => {\n    console.log(reason)\n})\n\n\n//上面代码requestImg函数异步请求一张图片，timeout函数是一个延时5秒的异步操作，我们将他们在一起放在race中赛跑\n//如果5秒内图片请求成功那么便进入then方法，执行正常的流程。\n//如果5秒内图片还未成功返回，那么则进入catch，报“图片请求超时”的信息\n\n"},"book/17.手写Promise.all.html":{"url":"book/17.手写Promise.all.html","title":"17.手写Promise.all","keywords":"","body":"17.手写Promise.all\n\nfunction MyAll(prams){\n    let res, rej\n    var p = new Promise((resolve, reject) => {\n        res = resolve\n        rej = reject\n    })\n\n    let result = []\n    let count = 0\n    let fullFillCount = 0\n    for (const pram of prams) {\n        const i = count\n        count++\n        Promise.resolve(pram).then((data) => {\n            result[i] = data\n            fullFillCount ++\n            if(fullFillCount == count) {\n                res(result)\n            }\n        },rej)\n    }\n\n    if(count == 0 ) {\n        res(result)\n    }\n\n    return p\n}\n\nMyAll([1,2,3,4]).then((data) => {\n    console.log(data)\n})\n\nPromise.all([1,2,3,4]).then((data)=> {\n    console.log(data)\n})\n\n"},"book/18.手写Promise.html":{"url":"book/18.手写Promise.html","title":"18.手写Promise","keywords":"","body":"18.手写Promise\nclass Promise {\n  //构造函数\n  constructor(executor) {\n    //添加属性\n    this.PromiseState = 'pending'\n    this.PromiseResult = null\n\n    //声明属性\n    this.callbacks = []\n    const self = this\n\n    function resolve(data) {\n      //判断状态\n      if (self.PromiseState !== 'pending') return;\n\n      //1.修改对象的状态（promiseState）\n      self.PromiseState = 'fulfilled'\n\n      //2.设置对象结果值（promiseResult）\n      self.PromiseResult = data\n\n      //调用成功的回调函数\n      setTimeout(() => {\n        self.callbacks.forEach(item => {\n          item.onResolved(data)\n        })\n      });\n    }\n\n    function reject(data) {\n      // 判断状态\n      if (self.PromiseState !== 'pending') return;\n\n      //1.修改对象的状态（promiseState）\n      self.PromiseState = 'rejected'\n\n      //2.设置对象结果值（promiseResult）\n      self.PromiseResult = data\n\n      //调用成功的回调函数\n      setTimeout(() => {\n        self.callbacks.forEach(item => {\n          item.onRecjected(data)\n        })\n      });\n    }\n\n    try {\n      //同步调用[执行器函数]\n      executor(resolve, reject)\n    } catch (e) {\n      //修改promise对象的状态\n      reject(e)\n    }\n  }\n\n  //then方法\n  then(onResolved, onRejected) {\n    const self = this\n\n    if (typeof onRejected !== 'function') {\n      onRejected = reason => {\n        throw reason\n      }\n    }\n\n    if (typeof onResolved !== 'function') {\n      onResolved = value => value\n    }\n    return new Promise((resolve, reject) => {\n      function callback(type) {\n        try {\n          let result = type(self.PromiseResult)\n          // 判断\n          if (result instanceof Promsie) {\n            //如果是Promise类型对象\n            result.then(v => {\n              resolve(v)\n            }, r => {\n              reject(r)\n            })\n          } else {\n            resolve(result)\n          }\n        } catch (e) {\n          reject(e)\n        }\n      }\n\n      //调用回调函数\n      if (this.PromiseState === 'fulfilled') {\n        setTimeout(() => {\n          callback(onResolved)\n        });\n      }\n      if (this.PromiseState === 'rejected') {\n        setTimeout(() => {\n          callback(onRejected)\n        });\n      }\n      if (this.PromiseState === 'pending') {\n        //保存回调函数\n        this.callbacks.push({\n          onResolved() {\n            callback(onResolved)\n          },\n          onRejected() {\n            callback(onRejected)\n          }\n        })\n      }\n    })\n  }\n\n  //catch方法\n  catch = function (onRejected) {\n    return this.then(undefined, onRejected)\n  }\n\n  //resolve方法\n  static resolve(value) {\n    return new Promise((resolve, reject) => {\n      if (value instanceof Promise) {\n        value.then(v => {\n          resolve(v)\n        }, r => {\n          reject(r)\n        })\n      } else {\n        resolve(value)\n      }\n    })\n  }\n\n  //reject方法\n  static reject(reason) {\n    return new Promise((resolve, reject) => {\n      reject(reason)\n    })\n  }\n\n  //all方法\n  static all(promise) {\n    return new Promise((resolve, reject) => {\n\n      let count = 0\n      let arr = []\n\n      for (let i = 0; i  {\n          //得知对象的状态是成功\n          //每个promise对象都成功\n          count++\n          //将当前promise对象成功的结果 存入到数组中\n          arr[i] = v\n          //判断\n          if (count === promise.length) {\n            //修改状态\n            resolve()\n          }\n        }, r => {\n          reject(r)\n        })\n      }\n    })\n  }\n\n  //race方法\n  static race(promise) {\n    return new Promise((resolve, reject) => {\n      for (let i = 0; i  {\n          resolve(v)\n        }, r => {\n          reject(r)\n        })\n      }\n    })\n  }\n}\n\n"}}}